"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@radix-ui+react-toast@1.2.14_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0";
exports.ids = ["vendor-chunks/@radix-ui+react-toast@1.2.14_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@radix-ui+react-toast@1.2.14_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@radix-ui/react-toast/dist/index.mjs":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@radix-ui+react-toast@1.2.14_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@radix-ui/react-toast/dist/index.mjs ***!
  \*************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Action: () => (/* binding */ Action),\n/* harmony export */   Close: () => (/* binding */ Close),\n/* harmony export */   Description: () => (/* binding */ Description),\n/* harmony export */   Provider: () => (/* binding */ Provider),\n/* harmony export */   Root: () => (/* binding */ Root2),\n/* harmony export */   Title: () => (/* binding */ Title),\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   ToastAction: () => (/* binding */ ToastAction),\n/* harmony export */   ToastClose: () => (/* binding */ ToastClose),\n/* harmony export */   ToastDescription: () => (/* binding */ ToastDescription),\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   ToastTitle: () => (/* binding */ ToastTitle),\n/* harmony export */   ToastViewport: () => (/* binding */ ToastViewport),\n/* harmony export */   Viewport: () => (/* binding */ Viewport),\n/* harmony export */   createToastScope: () => (/* binding */ createToastScope)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../.npm/_npx/8b377f6eec906bc4/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/../.npm/_npx/8b377f6eec906bc4/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @radix-ui/primitive */ \"(ssr)/./node_modules/.pnpm/@radix-ui+primitive@1.1.2/node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-compose-refs@1.1.2_@types+react@19.1.8_react@19.1.0/node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_collection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-collection */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-collection@1.1.7_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@radix-ui/react-collection/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-context */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-context@1.1.2_@types+react@19.1.8_react@19.1.0/node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-dismissable-layer */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-dismissable-layer@1.1.10_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @radix-ui/react-portal */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-portal@1.1.9_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@radix-ui/react-portal/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-presence */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-presence@1.1.4_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@radix-ui/react-presence/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-primitive@2.1.3_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-use-callback-ref@1.1.1_@types+react@19.1.8_react@19.1.0/node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/react-use-controllable-state */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-use-controllable-state@1.2.2_@types+react@19.1.8_react@19.1.0/node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-use-layout-effect@1.1.1_@types+react@19.1.8_react@19.1.0/node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/react-visually-hidden */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-visually-hidden@1.2.3_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@radix-ui/react-visually-hidden/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/../.npm/_npx/8b377f6eec906bc4/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Action,Close,Description,Provider,Root,Title,Toast,ToastAction,ToastClose,ToastDescription,ToastProvider,ToastTitle,ToastViewport,Viewport,createToastScope auto */ // src/toast.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar PROVIDER_NAME = \"ToastProvider\";\nvar [Collection, useCollection, createCollectionScope] = (0,_radix_ui_react_collection__WEBPACK_IMPORTED_MODULE_3__.createCollection)(\"Toast\");\nvar [createToastContext, createToastScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_4__.createContextScope)(\"Toast\", [\n    createCollectionScope\n]);\nvar [ToastProviderProvider, useToastProviderContext] = createToastContext(PROVIDER_NAME);\nvar ToastProvider = (props)=>{\n    const { __scopeToast, label = \"Notification\", duration = 5e3, swipeDirection = \"right\", swipeThreshold = 50, children } = props;\n    const [viewport, setViewport] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [toastCount, setToastCount] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const isFocusedToastEscapeKeyDownRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const isClosePausedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    if (!label.trim()) {\n        console.error(`Invalid prop \\`label\\` supplied to \\`${PROVIDER_NAME}\\`. Expected non-empty \\`string\\`.`);\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Collection.Provider, {\n        scope: __scopeToast,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastProviderProvider, {\n            scope: __scopeToast,\n            label,\n            duration,\n            swipeDirection,\n            swipeThreshold,\n            toastCount,\n            viewport,\n            onViewportChange: setViewport,\n            onToastAdd: react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n                \"ToastProvider.useCallback\": ()=>setToastCount({\n                        \"ToastProvider.useCallback\": (prevCount)=>prevCount + 1\n                    }[\"ToastProvider.useCallback\"])\n            }[\"ToastProvider.useCallback\"], []),\n            onToastRemove: react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n                \"ToastProvider.useCallback\": ()=>setToastCount({\n                        \"ToastProvider.useCallback\": (prevCount)=>prevCount - 1\n                    }[\"ToastProvider.useCallback\"])\n            }[\"ToastProvider.useCallback\"], []),\n            isFocusedToastEscapeKeyDownRef,\n            isClosePausedRef,\n            children\n        })\n    });\n};\nToastProvider.displayName = PROVIDER_NAME;\nvar VIEWPORT_NAME = \"ToastViewport\";\nvar VIEWPORT_DEFAULT_HOTKEY = [\n    \"F8\"\n];\nvar VIEWPORT_PAUSE = \"toast.viewportPause\";\nvar VIEWPORT_RESUME = \"toast.viewportResume\";\nvar ToastViewport = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { __scopeToast, hotkey = VIEWPORT_DEFAULT_HOTKEY, label = \"Notifications ({hotkey})\", ...viewportProps } = props;\n    const context = useToastProviderContext(VIEWPORT_NAME, __scopeToast);\n    const getItems = useCollection(__scopeToast);\n    const wrapperRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const headFocusProxyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const tailFocusProxyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, ref, context.onViewportChange);\n    const hotkeyLabel = hotkey.join(\"+\").replace(/Key/g, \"\").replace(/Digit/g, \"\");\n    const hasToasts = context.toastCount > 0;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastViewport.useEffect\": ()=>{\n            const handleKeyDown = {\n                \"ToastViewport.useEffect.handleKeyDown\": (event)=>{\n                    const isHotkeyPressed = hotkey.length !== 0 && hotkey.every({\n                        \"ToastViewport.useEffect.handleKeyDown\": (key)=>event[key] || event.code === key\n                    }[\"ToastViewport.useEffect.handleKeyDown\"]);\n                    if (isHotkeyPressed) ref.current?.focus();\n                }\n            }[\"ToastViewport.useEffect.handleKeyDown\"];\n            document.addEventListener(\"keydown\", handleKeyDown);\n            return ({\n                \"ToastViewport.useEffect\": ()=>document.removeEventListener(\"keydown\", handleKeyDown)\n            })[\"ToastViewport.useEffect\"];\n        }\n    }[\"ToastViewport.useEffect\"], [\n        hotkey\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastViewport.useEffect\": ()=>{\n            const wrapper = wrapperRef.current;\n            const viewport = ref.current;\n            if (hasToasts && wrapper && viewport) {\n                const handlePause = {\n                    \"ToastViewport.useEffect.handlePause\": ()=>{\n                        if (!context.isClosePausedRef.current) {\n                            const pauseEvent = new CustomEvent(VIEWPORT_PAUSE);\n                            viewport.dispatchEvent(pauseEvent);\n                            context.isClosePausedRef.current = true;\n                        }\n                    }\n                }[\"ToastViewport.useEffect.handlePause\"];\n                const handleResume = {\n                    \"ToastViewport.useEffect.handleResume\": ()=>{\n                        if (context.isClosePausedRef.current) {\n                            const resumeEvent = new CustomEvent(VIEWPORT_RESUME);\n                            viewport.dispatchEvent(resumeEvent);\n                            context.isClosePausedRef.current = false;\n                        }\n                    }\n                }[\"ToastViewport.useEffect.handleResume\"];\n                const handleFocusOutResume = {\n                    \"ToastViewport.useEffect.handleFocusOutResume\": (event)=>{\n                        const isFocusMovingOutside = !wrapper.contains(event.relatedTarget);\n                        if (isFocusMovingOutside) handleResume();\n                    }\n                }[\"ToastViewport.useEffect.handleFocusOutResume\"];\n                const handlePointerLeaveResume = {\n                    \"ToastViewport.useEffect.handlePointerLeaveResume\": ()=>{\n                        const isFocusInside = wrapper.contains(document.activeElement);\n                        if (!isFocusInside) handleResume();\n                    }\n                }[\"ToastViewport.useEffect.handlePointerLeaveResume\"];\n                wrapper.addEventListener(\"focusin\", handlePause);\n                wrapper.addEventListener(\"focusout\", handleFocusOutResume);\n                wrapper.addEventListener(\"pointermove\", handlePause);\n                wrapper.addEventListener(\"pointerleave\", handlePointerLeaveResume);\n                window.addEventListener(\"blur\", handlePause);\n                window.addEventListener(\"focus\", handleResume);\n                return ({\n                    \"ToastViewport.useEffect\": ()=>{\n                        wrapper.removeEventListener(\"focusin\", handlePause);\n                        wrapper.removeEventListener(\"focusout\", handleFocusOutResume);\n                        wrapper.removeEventListener(\"pointermove\", handlePause);\n                        wrapper.removeEventListener(\"pointerleave\", handlePointerLeaveResume);\n                        window.removeEventListener(\"blur\", handlePause);\n                        window.removeEventListener(\"focus\", handleResume);\n                    }\n                })[\"ToastViewport.useEffect\"];\n            }\n        }\n    }[\"ToastViewport.useEffect\"], [\n        hasToasts,\n        context.isClosePausedRef\n    ]);\n    const getSortedTabbableCandidates = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"ToastViewport.useCallback[getSortedTabbableCandidates]\": ({ tabbingDirection })=>{\n            const toastItems = getItems();\n            const tabbableCandidates = toastItems.map({\n                \"ToastViewport.useCallback[getSortedTabbableCandidates].tabbableCandidates\": (toastItem)=>{\n                    const toastNode = toastItem.ref.current;\n                    const toastTabbableCandidates = [\n                        toastNode,\n                        ...getTabbableCandidates(toastNode)\n                    ];\n                    return tabbingDirection === \"forwards\" ? toastTabbableCandidates : toastTabbableCandidates.reverse();\n                }\n            }[\"ToastViewport.useCallback[getSortedTabbableCandidates].tabbableCandidates\"]);\n            return (tabbingDirection === \"forwards\" ? tabbableCandidates.reverse() : tabbableCandidates).flat();\n        }\n    }[\"ToastViewport.useCallback[getSortedTabbableCandidates]\"], [\n        getItems\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastViewport.useEffect\": ()=>{\n            const viewport = ref.current;\n            if (viewport) {\n                const handleKeyDown = {\n                    \"ToastViewport.useEffect.handleKeyDown\": (event)=>{\n                        const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n                        const isTabKey = event.key === \"Tab\" && !isMetaKey;\n                        if (isTabKey) {\n                            const focusedElement = document.activeElement;\n                            const isTabbingBackwards = event.shiftKey;\n                            const targetIsViewport = event.target === viewport;\n                            if (targetIsViewport && isTabbingBackwards) {\n                                headFocusProxyRef.current?.focus();\n                                return;\n                            }\n                            const tabbingDirection = isTabbingBackwards ? \"backwards\" : \"forwards\";\n                            const sortedCandidates = getSortedTabbableCandidates({\n                                tabbingDirection\n                            });\n                            const index = sortedCandidates.findIndex({\n                                \"ToastViewport.useEffect.handleKeyDown.index\": (candidate)=>candidate === focusedElement\n                            }[\"ToastViewport.useEffect.handleKeyDown.index\"]);\n                            if (focusFirst(sortedCandidates.slice(index + 1))) {\n                                event.preventDefault();\n                            } else {\n                                isTabbingBackwards ? headFocusProxyRef.current?.focus() : tailFocusProxyRef.current?.focus();\n                            }\n                        }\n                    }\n                }[\"ToastViewport.useEffect.handleKeyDown\"];\n                viewport.addEventListener(\"keydown\", handleKeyDown);\n                return ({\n                    \"ToastViewport.useEffect\": ()=>viewport.removeEventListener(\"keydown\", handleKeyDown)\n                })[\"ToastViewport.useEffect\"];\n            }\n        }\n    }[\"ToastViewport.useEffect\"], [\n        getItems,\n        getSortedTabbableCandidates\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_6__.Branch, {\n        ref: wrapperRef,\n        role: \"region\",\n        \"aria-label\": label.replace(\"{hotkey}\", hotkeyLabel),\n        tabIndex: -1,\n        style: {\n            pointerEvents: hasToasts ? void 0 : \"none\"\n        },\n        children: [\n            hasToasts && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(FocusProxy, {\n                ref: headFocusProxyRef,\n                onFocusFromOutsideViewport: ()=>{\n                    const tabbableCandidates = getSortedTabbableCandidates({\n                        tabbingDirection: \"forwards\"\n                    });\n                    focusFirst(tabbableCandidates);\n                }\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Collection.Slot, {\n                scope: __scopeToast,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.ol, {\n                    tabIndex: -1,\n                    ...viewportProps,\n                    ref: composedRefs\n                })\n            }),\n            hasToasts && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(FocusProxy, {\n                ref: tailFocusProxyRef,\n                onFocusFromOutsideViewport: ()=>{\n                    const tabbableCandidates = getSortedTabbableCandidates({\n                        tabbingDirection: \"backwards\"\n                    });\n                    focusFirst(tabbableCandidates);\n                }\n            })\n        ]\n    });\n});\nToastViewport.displayName = VIEWPORT_NAME;\nvar FOCUS_PROXY_NAME = \"ToastFocusProxy\";\nvar FocusProxy = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props;\n    const context = useToastProviderContext(FOCUS_PROXY_NAME, __scopeToast);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_8__.VisuallyHidden, {\n        \"aria-hidden\": true,\n        tabIndex: 0,\n        ...proxyProps,\n        ref: forwardedRef,\n        style: {\n            position: \"fixed\"\n        },\n        onFocus: (event)=>{\n            const prevFocusedElement = event.relatedTarget;\n            const isFocusFromOutsideViewport = !context.viewport?.contains(prevFocusedElement);\n            if (isFocusFromOutsideViewport) onFocusFromOutsideViewport();\n        }\n    });\n});\nFocusProxy.displayName = FOCUS_PROXY_NAME;\nvar TOAST_NAME = \"Toast\";\nvar TOAST_SWIPE_START = \"toast.swipeStart\";\nvar TOAST_SWIPE_MOVE = \"toast.swipeMove\";\nvar TOAST_SWIPE_CANCEL = \"toast.swipeCancel\";\nvar TOAST_SWIPE_END = \"toast.swipeEnd\";\nvar Toast = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props;\n    const [open, setOpen] = (0,_radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__.useControllableState)({\n        prop: openProp,\n        defaultProp: defaultOpen ?? true,\n        onChange: onOpenChange,\n        caller: TOAST_NAME\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_10__.Presence, {\n        present: forceMount || open,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastImpl, {\n            open,\n            ...toastProps,\n            ref: forwardedRef,\n            onClose: ()=>setOpen(false),\n            onPause: (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)(props.onPause),\n            onResume: (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)(props.onResume),\n            onSwipeStart: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeStart, (event)=>{\n                event.currentTarget.setAttribute(\"data-swipe\", \"start\");\n            }),\n            onSwipeMove: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeMove, (event)=>{\n                const { x, y } = event.detail.delta;\n                event.currentTarget.setAttribute(\"data-swipe\", \"move\");\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-move-x\", `${x}px`);\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-move-y\", `${y}px`);\n            }),\n            onSwipeCancel: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeCancel, (event)=>{\n                event.currentTarget.setAttribute(\"data-swipe\", \"cancel\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-x\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-y\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-end-x\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-end-y\");\n            }),\n            onSwipeEnd: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeEnd, (event)=>{\n                const { x, y } = event.detail.delta;\n                event.currentTarget.setAttribute(\"data-swipe\", \"end\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-x\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-y\");\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-end-x\", `${x}px`);\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-end-y\", `${y}px`);\n                setOpen(false);\n            })\n        })\n    });\n});\nToast.displayName = TOAST_NAME;\nvar [ToastInteractiveProvider, useToastInteractiveContext] = createToastContext(TOAST_NAME, {\n    onClose () {}\n});\nvar ToastImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { __scopeToast, type = \"foreground\", duration: durationProp, open, onClose, onEscapeKeyDown, onPause, onResume, onSwipeStart, onSwipeMove, onSwipeCancel, onSwipeEnd, ...toastProps } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, {\n        \"ToastImpl.useComposedRefs[composedRefs]\": (node2)=>setNode(node2)\n    }[\"ToastImpl.useComposedRefs[composedRefs]\"]);\n    const pointerStartRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const swipeDeltaRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const duration = durationProp || context.duration;\n    const closeTimerStartTimeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const closeTimerRemainingTimeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(duration);\n    const closeTimerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const { onToastAdd, onToastRemove } = context;\n    const handleClose = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)({\n        \"ToastImpl.useCallbackRef[handleClose]\": ()=>{\n            const isFocusInToast = node?.contains(document.activeElement);\n            if (isFocusInToast) context.viewport?.focus();\n            onClose();\n        }\n    }[\"ToastImpl.useCallbackRef[handleClose]\"]);\n    const startTimer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"ToastImpl.useCallback[startTimer]\": (duration2)=>{\n            if (!duration2 || duration2 === Infinity) return;\n            window.clearTimeout(closeTimerRef.current);\n            closeTimerStartTimeRef.current = /* @__PURE__ */ new Date().getTime();\n            closeTimerRef.current = window.setTimeout(handleClose, duration2);\n        }\n    }[\"ToastImpl.useCallback[startTimer]\"], [\n        handleClose\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastImpl.useEffect\": ()=>{\n            const viewport = context.viewport;\n            if (viewport) {\n                const handleResume = {\n                    \"ToastImpl.useEffect.handleResume\": ()=>{\n                        startTimer(closeTimerRemainingTimeRef.current);\n                        onResume?.();\n                    }\n                }[\"ToastImpl.useEffect.handleResume\"];\n                const handlePause = {\n                    \"ToastImpl.useEffect.handlePause\": ()=>{\n                        const elapsedTime = /* @__PURE__ */ new Date().getTime() - closeTimerStartTimeRef.current;\n                        closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime;\n                        window.clearTimeout(closeTimerRef.current);\n                        onPause?.();\n                    }\n                }[\"ToastImpl.useEffect.handlePause\"];\n                viewport.addEventListener(VIEWPORT_PAUSE, handlePause);\n                viewport.addEventListener(VIEWPORT_RESUME, handleResume);\n                return ({\n                    \"ToastImpl.useEffect\": ()=>{\n                        viewport.removeEventListener(VIEWPORT_PAUSE, handlePause);\n                        viewport.removeEventListener(VIEWPORT_RESUME, handleResume);\n                    }\n                })[\"ToastImpl.useEffect\"];\n            }\n        }\n    }[\"ToastImpl.useEffect\"], [\n        context.viewport,\n        duration,\n        onPause,\n        onResume,\n        startTimer\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastImpl.useEffect\": ()=>{\n            if (open && !context.isClosePausedRef.current) startTimer(duration);\n        }\n    }[\"ToastImpl.useEffect\"], [\n        open,\n        duration,\n        context.isClosePausedRef,\n        startTimer\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastImpl.useEffect\": ()=>{\n            onToastAdd();\n            return ({\n                \"ToastImpl.useEffect\": ()=>onToastRemove()\n            })[\"ToastImpl.useEffect\"];\n        }\n    }[\"ToastImpl.useEffect\"], [\n        onToastAdd,\n        onToastRemove\n    ]);\n    const announceTextContent = react__WEBPACK_IMPORTED_MODULE_0__.useMemo({\n        \"ToastImpl.useMemo[announceTextContent]\": ()=>{\n            return node ? getAnnounceTextContent(node) : null;\n        }\n    }[\"ToastImpl.useMemo[announceTextContent]\"], [\n        node\n    ]);\n    if (!context.viewport) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children: [\n            announceTextContent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastAnnounce, {\n                __scopeToast,\n                role: \"status\",\n                \"aria-live\": type === \"foreground\" ? \"assertive\" : \"polite\",\n                \"aria-atomic\": true,\n                children: announceTextContent\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastInteractiveProvider, {\n                scope: __scopeToast,\n                onClose: handleClose,\n                children: /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Collection.ItemSlot, {\n                    scope: __scopeToast,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_6__.Root, {\n                        asChild: true,\n                        onEscapeKeyDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(onEscapeKeyDown, ()=>{\n                            if (!context.isFocusedToastEscapeKeyDownRef.current) handleClose();\n                            context.isFocusedToastEscapeKeyDownRef.current = false;\n                        }),\n                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.li, {\n                            role: \"status\",\n                            \"aria-live\": \"off\",\n                            \"aria-atomic\": true,\n                            tabIndex: 0,\n                            \"data-state\": open ? \"open\" : \"closed\",\n                            \"data-swipe-direction\": context.swipeDirection,\n                            ...toastProps,\n                            ref: composedRefs,\n                            style: {\n                                userSelect: \"none\",\n                                touchAction: \"none\",\n                                ...props.style\n                            },\n                            onKeyDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onKeyDown, (event)=>{\n                                if (event.key !== \"Escape\") return;\n                                onEscapeKeyDown?.(event.nativeEvent);\n                                if (!event.nativeEvent.defaultPrevented) {\n                                    context.isFocusedToastEscapeKeyDownRef.current = true;\n                                    handleClose();\n                                }\n                            }),\n                            onPointerDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onPointerDown, (event)=>{\n                                if (event.button !== 0) return;\n                                pointerStartRef.current = {\n                                    x: event.clientX,\n                                    y: event.clientY\n                                };\n                            }),\n                            onPointerMove: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onPointerMove, (event)=>{\n                                if (!pointerStartRef.current) return;\n                                const x = event.clientX - pointerStartRef.current.x;\n                                const y = event.clientY - pointerStartRef.current.y;\n                                const hasSwipeMoveStarted = Boolean(swipeDeltaRef.current);\n                                const isHorizontalSwipe = [\n                                    \"left\",\n                                    \"right\"\n                                ].includes(context.swipeDirection);\n                                const clamp = [\n                                    \"left\",\n                                    \"up\"\n                                ].includes(context.swipeDirection) ? Math.min : Math.max;\n                                const clampedX = isHorizontalSwipe ? clamp(0, x) : 0;\n                                const clampedY = !isHorizontalSwipe ? clamp(0, y) : 0;\n                                const moveStartBuffer = event.pointerType === \"touch\" ? 10 : 2;\n                                const delta = {\n                                    x: clampedX,\n                                    y: clampedY\n                                };\n                                const eventDetail = {\n                                    originalEvent: event,\n                                    delta\n                                };\n                                if (hasSwipeMoveStarted) {\n                                    swipeDeltaRef.current = delta;\n                                    handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {\n                                        discrete: false\n                                    });\n                                } else if (isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer)) {\n                                    swipeDeltaRef.current = delta;\n                                    handleAndDispatchCustomEvent(TOAST_SWIPE_START, onSwipeStart, eventDetail, {\n                                        discrete: false\n                                    });\n                                    event.target.setPointerCapture(event.pointerId);\n                                } else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) {\n                                    pointerStartRef.current = null;\n                                }\n                            }),\n                            onPointerUp: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onPointerUp, (event)=>{\n                                const delta = swipeDeltaRef.current;\n                                const target = event.target;\n                                if (target.hasPointerCapture(event.pointerId)) {\n                                    target.releasePointerCapture(event.pointerId);\n                                }\n                                swipeDeltaRef.current = null;\n                                pointerStartRef.current = null;\n                                if (delta) {\n                                    const toast = event.currentTarget;\n                                    const eventDetail = {\n                                        originalEvent: event,\n                                        delta\n                                    };\n                                    if (isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold)) {\n                                        handleAndDispatchCustomEvent(TOAST_SWIPE_END, onSwipeEnd, eventDetail, {\n                                            discrete: true\n                                        });\n                                    } else {\n                                        handleAndDispatchCustomEvent(TOAST_SWIPE_CANCEL, onSwipeCancel, eventDetail, {\n                                            discrete: true\n                                        });\n                                    }\n                                    toast.addEventListener(\"click\", (event2)=>event2.preventDefault(), {\n                                        once: true\n                                    });\n                                }\n                            })\n                        })\n                    })\n                }), context.viewport)\n            })\n        ]\n    });\n});\nvar ToastAnnounce = (props)=>{\n    const { __scopeToast, children, ...announceProps } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const [renderAnnounceText, setRenderAnnounceText] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [isAnnounced, setIsAnnounced] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    useNextFrame({\n        \"ToastAnnounce.useNextFrame\": ()=>setRenderAnnounceText(true)\n    }[\"ToastAnnounce.useNextFrame\"]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastAnnounce.useEffect\": ()=>{\n            const timer = window.setTimeout({\n                \"ToastAnnounce.useEffect.timer\": ()=>setIsAnnounced(true)\n            }[\"ToastAnnounce.useEffect.timer\"], 1e3);\n            return ({\n                \"ToastAnnounce.useEffect\": ()=>window.clearTimeout(timer)\n            })[\"ToastAnnounce.useEffect\"];\n        }\n    }[\"ToastAnnounce.useEffect\"], []);\n    return isAnnounced ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_13__.Portal, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_8__.VisuallyHidden, {\n            ...announceProps,\n            children: renderAnnounceText && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n                children: [\n                    context.label,\n                    \" \",\n                    children\n                ]\n            })\n        })\n    });\n};\nvar TITLE_NAME = \"ToastTitle\";\nvar ToastTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { __scopeToast, ...titleProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.div, {\n        ...titleProps,\n        ref: forwardedRef\n    });\n});\nToastTitle.displayName = TITLE_NAME;\nvar DESCRIPTION_NAME = \"ToastDescription\";\nvar ToastDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { __scopeToast, ...descriptionProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.div, {\n        ...descriptionProps,\n        ref: forwardedRef\n    });\n});\nToastDescription.displayName = DESCRIPTION_NAME;\nvar ACTION_NAME = \"ToastAction\";\nvar ToastAction = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { altText, ...actionProps } = props;\n    if (!altText.trim()) {\n        console.error(`Invalid prop \\`altText\\` supplied to \\`${ACTION_NAME}\\`. Expected non-empty \\`string\\`.`);\n        return null;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastAnnounceExclude, {\n        altText,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastClose, {\n            ...actionProps,\n            ref: forwardedRef\n        })\n    });\n});\nToastAction.displayName = ACTION_NAME;\nvar CLOSE_NAME = \"ToastClose\";\nvar ToastClose = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { __scopeToast, ...closeProps } = props;\n    const interactiveContext = useToastInteractiveContext(CLOSE_NAME, __scopeToast);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastAnnounceExclude, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.button, {\n            type: \"button\",\n            ...closeProps,\n            ref: forwardedRef,\n            onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onClick, interactiveContext.onClose)\n        })\n    });\n});\nToastClose.displayName = CLOSE_NAME;\nvar ToastAnnounceExclude = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { __scopeToast, altText, ...announceExcludeProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.div, {\n        \"data-radix-toast-announce-exclude\": \"\",\n        \"data-radix-toast-announce-alt\": altText || void 0,\n        ...announceExcludeProps,\n        ref: forwardedRef\n    });\n});\nfunction getAnnounceTextContent(container) {\n    const textContent = [];\n    const childNodes = Array.from(container.childNodes);\n    childNodes.forEach((node)=>{\n        if (node.nodeType === node.TEXT_NODE && node.textContent) textContent.push(node.textContent);\n        if (isHTMLElement(node)) {\n            const isHidden = node.ariaHidden || node.hidden || node.style.display === \"none\";\n            const isExcluded = node.dataset.radixToastAnnounceExclude === \"\";\n            if (!isHidden) {\n                if (isExcluded) {\n                    const altText = node.dataset.radixToastAnnounceAlt;\n                    if (altText) textContent.push(altText);\n                } else {\n                    textContent.push(...getAnnounceTextContent(node));\n                }\n            }\n        }\n    });\n    return textContent;\n}\nfunction handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {\n    const currentTarget = detail.originalEvent.currentTarget;\n    const event = new CustomEvent(name, {\n        bubbles: true,\n        cancelable: true,\n        detail\n    });\n    if (handler) currentTarget.addEventListener(name, handler, {\n        once: true\n    });\n    if (discrete) {\n        (0,_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.dispatchDiscreteCustomEvent)(currentTarget, event);\n    } else {\n        currentTarget.dispatchEvent(event);\n    }\n}\nvar isDeltaInDirection = (delta, direction, threshold = 0)=>{\n    const deltaX = Math.abs(delta.x);\n    const deltaY = Math.abs(delta.y);\n    const isDeltaX = deltaX > deltaY;\n    if (direction === \"left\" || direction === \"right\") {\n        return isDeltaX && deltaX > threshold;\n    } else {\n        return !isDeltaX && deltaY > threshold;\n    }\n};\nfunction useNextFrame(callback = ()=>{}) {\n    const fn = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)(callback);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_14__.useLayoutEffect)({\n        \"useNextFrame.useLayoutEffect\": ()=>{\n            let raf1 = 0;\n            let raf2 = 0;\n            raf1 = window.requestAnimationFrame({\n                \"useNextFrame.useLayoutEffect\": ()=>raf2 = window.requestAnimationFrame(fn)\n            }[\"useNextFrame.useLayoutEffect\"]);\n            return ({\n                \"useNextFrame.useLayoutEffect\": ()=>{\n                    window.cancelAnimationFrame(raf1);\n                    window.cancelAnimationFrame(raf2);\n                }\n            })[\"useNextFrame.useLayoutEffect\"];\n        }\n    }[\"useNextFrame.useLayoutEffect\"], [\n        fn\n    ]);\n}\nfunction isHTMLElement(node) {\n    return node.nodeType === node.ELEMENT_NODE;\n}\nfunction getTabbableCandidates(container) {\n    const nodes = [];\n    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n        acceptNode: (node)=>{\n            const isHiddenInput = node.tagName === \"INPUT\" && node.type === \"hidden\";\n            if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n            return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n        }\n    });\n    while(walker.nextNode())nodes.push(walker.currentNode);\n    return nodes;\n}\nfunction focusFirst(candidates) {\n    const previouslyFocusedElement = document.activeElement;\n    return candidates.some((candidate)=>{\n        if (candidate === previouslyFocusedElement) return true;\n        candidate.focus();\n        return document.activeElement !== previouslyFocusedElement;\n    });\n}\nvar Provider = ToastProvider;\nvar Viewport = ToastViewport;\nvar Root2 = Toast;\nvar Title = ToastTitle;\nvar Description = ToastDescription;\nvar Action = ToastAction;\nvar Close = ToastClose;\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHJhZGl4LXVpK3JlYWN0LXRvYXN0QDEuMi4xNF9AdHlwZXMrcmVhY3QtZG9tQDE5LjEuNl9AdHlwZXMrcmVhY3RAMTkuMS44X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdG9hc3QvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lOQUVBLGdCQUFnQjtBQUNlO0FBQ087QUFDcUI7QUFDSTtBQUNEO0FBQ0Q7QUFDUztBQUN0QjtBQUNJO0FBQytCO0FBQ2pCO0FBQ1k7QUFDVjtBQUNIO0FBQ1Q7QUFDeEQsSUFBSWtCLGdCQUFnQjtBQUNwQixJQUFJLENBQUNDLFlBQVlDLGVBQWVDLHNCQUFzQixHQUFHakIsNEVBQWdCQSxDQUFDO0FBQzFFLElBQUksQ0FBQ2tCLG9CQUFvQkMsaUJBQWlCLEdBQUdsQiwyRUFBa0JBLENBQUMsU0FBUztJQUFDZ0I7Q0FBc0I7QUFDaEcsSUFBSSxDQUFDRyx1QkFBdUJDLHdCQUF3QixHQUFHSCxtQkFBbUJKO0FBQzFFLElBQUlRLGdCQUFnQixDQUFDQztJQUNuQixNQUFNLEVBQ0pDLFlBQVksRUFDWkMsUUFBUSxjQUFjLEVBQ3RCQyxXQUFXLEdBQUcsRUFDZEMsaUJBQWlCLE9BQU8sRUFDeEJDLGlCQUFpQixFQUFFLEVBQ25CQyxRQUFRLEVBQ1QsR0FBR047SUFDSixNQUFNLENBQUNPLFVBQVVDLFlBQVksR0FBR25DLDJDQUFjLENBQUM7SUFDL0MsTUFBTSxDQUFDcUMsWUFBWUMsY0FBYyxHQUFHdEMsMkNBQWMsQ0FBQztJQUNuRCxNQUFNdUMsaUNBQWlDdkMseUNBQVksQ0FBQztJQUNwRCxNQUFNeUMsbUJBQW1CekMseUNBQVksQ0FBQztJQUN0QyxJQUFJLENBQUM2QixNQUFNYSxJQUFJLElBQUk7UUFDakJDLFFBQVFDLEtBQUssQ0FDWCxDQUFDLHFDQUFxQyxF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S0FBSzlGLEtBQUt5SCxZQUFZO0FBQzVDO0FBQ0EsU0FBU25NLHNCQUFzQmtLLFNBQVM7SUFDdEMsTUFBTWtDLFFBQVEsRUFBRTtJQUNoQixNQUFNQyxTQUFTL04sU0FBU2dPLGdCQUFnQixDQUFDcEMsV0FBV3FDLFdBQVdDLFlBQVksRUFBRTtRQUMzRUMsWUFBWSxDQUFDL0g7WUFDWCxNQUFNZ0ksZ0JBQWdCaEksS0FBS2lJLE9BQU8sS0FBSyxXQUFXakksS0FBS0gsSUFBSSxLQUFLO1lBQ2hFLElBQUlHLEtBQUtrSSxRQUFRLElBQUlsSSxLQUFLb0csTUFBTSxJQUFJNEIsZUFBZSxPQUFPSCxXQUFXTSxXQUFXO1lBQ2hGLE9BQU9uSSxLQUFLcEQsUUFBUSxJQUFJLElBQUlpTCxXQUFXTyxhQUFhLEdBQUdQLFdBQVdNLFdBQVc7UUFDL0U7SUFDRjtJQUNBLE1BQU9SLE9BQU9VLFFBQVEsR0FBSVgsTUFBTTFCLElBQUksQ0FBQzJCLE9BQU9XLFdBQVc7SUFDdkQsT0FBT1o7QUFDVDtBQUNBLFNBQVNuTCxXQUFXZ00sVUFBVTtJQUM1QixNQUFNQywyQkFBMkI1TyxTQUFTZ0IsYUFBYTtJQUN2RCxPQUFPMk4sV0FBV0UsSUFBSSxDQUFDLENBQUNuTTtRQUN0QixJQUFJQSxjQUFja00sMEJBQTBCLE9BQU87UUFDbkRsTSxVQUFVM0MsS0FBSztRQUNmLE9BQU9DLFNBQVNnQixhQUFhLEtBQUs0TjtJQUNwQztBQUNGO0FBQ0EsSUFBSWxSLFdBQVduQjtBQUNmLElBQUl1UyxXQUFXeFE7QUFDZixJQUFJeVEsUUFBUTdLO0FBQ1osSUFBSThLLFFBQVFyRTtBQUNaLElBQUlzRSxjQUFjbEU7QUFDbEIsSUFBSW1FLFNBQVNoRTtBQUNiLElBQUlpRSxRQUFRN0Q7QUFpQlYsQ0FDRixrQ0FBa0MiLCJzb3VyY2VzIjpbIi9ob21lL3Byb2plY3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0ByYWRpeC11aStyZWFjdC10b2FzdEAxLjIuMTRfQHR5cGVzK3JlYWN0LWRvbUAxOS4xLjZfQHR5cGVzK3JlYWN0QDE5LjEuOF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXRvYXN0L2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vLyBzcmMvdG9hc3QudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcbmltcG9ydCB7IGNvbXBvc2VFdmVudEhhbmRsZXJzIH0gZnJvbSBcIkByYWRpeC11aS9wcmltaXRpdmVcIjtcbmltcG9ydCB7IHVzZUNvbXBvc2VkUmVmcyB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzXCI7XG5pbXBvcnQgeyBjcmVhdGVDb2xsZWN0aW9uIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1jb2xsZWN0aW9uXCI7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0U2NvcGUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LWNvbnRleHRcIjtcbmltcG9ydCAqIGFzIERpc21pc3NhYmxlTGF5ZXIgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1kaXNtaXNzYWJsZS1sYXllclwiO1xuaW1wb3J0IHsgUG9ydGFsIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wb3J0YWxcIjtcbmltcG9ydCB7IFByZXNlbmNlIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wcmVzZW5jZVwiO1xuaW1wb3J0IHsgUHJpbWl0aXZlLCBkaXNwYXRjaERpc2NyZXRlQ3VzdG9tRXZlbnQgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZVwiO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2tSZWYgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXVzZS1jYWxsYmFjay1yZWZcIjtcbmltcG9ydCB7IHVzZUNvbnRyb2xsYWJsZVN0YXRlIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC11c2UtY29udHJvbGxhYmxlLXN0YXRlXCI7XG5pbXBvcnQgeyB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXVzZS1sYXlvdXQtZWZmZWN0XCI7XG5pbXBvcnQgeyBWaXN1YWxseUhpZGRlbiB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtdmlzdWFsbHktaGlkZGVuXCI7XG5pbXBvcnQgeyBGcmFnbWVudCwganN4LCBqc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgUFJPVklERVJfTkFNRSA9IFwiVG9hc3RQcm92aWRlclwiO1xudmFyIFtDb2xsZWN0aW9uLCB1c2VDb2xsZWN0aW9uLCBjcmVhdGVDb2xsZWN0aW9uU2NvcGVdID0gY3JlYXRlQ29sbGVjdGlvbihcIlRvYXN0XCIpO1xudmFyIFtjcmVhdGVUb2FzdENvbnRleHQsIGNyZWF0ZVRvYXN0U2NvcGVdID0gY3JlYXRlQ29udGV4dFNjb3BlKFwiVG9hc3RcIiwgW2NyZWF0ZUNvbGxlY3Rpb25TY29wZV0pO1xudmFyIFtUb2FzdFByb3ZpZGVyUHJvdmlkZXIsIHVzZVRvYXN0UHJvdmlkZXJDb250ZXh0XSA9IGNyZWF0ZVRvYXN0Q29udGV4dChQUk9WSURFUl9OQU1FKTtcbnZhciBUb2FzdFByb3ZpZGVyID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBfX3Njb3BlVG9hc3QsXG4gICAgbGFiZWwgPSBcIk5vdGlmaWNhdGlvblwiLFxuICAgIGR1cmF0aW9uID0gNWUzLFxuICAgIHN3aXBlRGlyZWN0aW9uID0gXCJyaWdodFwiLFxuICAgIHN3aXBlVGhyZXNob2xkID0gNTAsXG4gICAgY2hpbGRyZW5cbiAgfSA9IHByb3BzO1xuICBjb25zdCBbdmlld3BvcnQsIHNldFZpZXdwb3J0XSA9IFJlYWN0LnVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBbdG9hc3RDb3VudCwgc2V0VG9hc3RDb3VudF0gPSBSZWFjdC51c2VTdGF0ZSgwKTtcbiAgY29uc3QgaXNGb2N1c2VkVG9hc3RFc2NhcGVLZXlEb3duUmVmID0gUmVhY3QudXNlUmVmKGZhbHNlKTtcbiAgY29uc3QgaXNDbG9zZVBhdXNlZFJlZiA9IFJlYWN0LnVzZVJlZihmYWxzZSk7XG4gIGlmICghbGFiZWwudHJpbSgpKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgIGBJbnZhbGlkIHByb3AgXFxgbGFiZWxcXGAgc3VwcGxpZWQgdG8gXFxgJHtQUk9WSURFUl9OQU1FfVxcYC4gRXhwZWN0ZWQgbm9uLWVtcHR5IFxcYHN0cmluZ1xcYC5gXG4gICAgKTtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChDb2xsZWN0aW9uLlByb3ZpZGVyLCB7IHNjb3BlOiBfX3Njb3BlVG9hc3QsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KFxuICAgIFRvYXN0UHJvdmlkZXJQcm92aWRlcixcbiAgICB7XG4gICAgICBzY29wZTogX19zY29wZVRvYXN0LFxuICAgICAgbGFiZWwsXG4gICAgICBkdXJhdGlvbixcbiAgICAgIHN3aXBlRGlyZWN0aW9uLFxuICAgICAgc3dpcGVUaHJlc2hvbGQsXG4gICAgICB0b2FzdENvdW50LFxuICAgICAgdmlld3BvcnQsXG4gICAgICBvblZpZXdwb3J0Q2hhbmdlOiBzZXRWaWV3cG9ydCxcbiAgICAgIG9uVG9hc3RBZGQ6IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHNldFRvYXN0Q291bnQoKHByZXZDb3VudCkgPT4gcHJldkNvdW50ICsgMSksIFtdKSxcbiAgICAgIG9uVG9hc3RSZW1vdmU6IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHNldFRvYXN0Q291bnQoKHByZXZDb3VudCkgPT4gcHJldkNvdW50IC0gMSksIFtdKSxcbiAgICAgIGlzRm9jdXNlZFRvYXN0RXNjYXBlS2V5RG93blJlZixcbiAgICAgIGlzQ2xvc2VQYXVzZWRSZWYsXG4gICAgICBjaGlsZHJlblxuICAgIH1cbiAgKSB9KTtcbn07XG5Ub2FzdFByb3ZpZGVyLmRpc3BsYXlOYW1lID0gUFJPVklERVJfTkFNRTtcbnZhciBWSUVXUE9SVF9OQU1FID0gXCJUb2FzdFZpZXdwb3J0XCI7XG52YXIgVklFV1BPUlRfREVGQVVMVF9IT1RLRVkgPSBbXCJGOFwiXTtcbnZhciBWSUVXUE9SVF9QQVVTRSA9IFwidG9hc3Qudmlld3BvcnRQYXVzZVwiO1xudmFyIFZJRVdQT1JUX1JFU1VNRSA9IFwidG9hc3Qudmlld3BvcnRSZXN1bWVcIjtcbnZhciBUb2FzdFZpZXdwb3J0ID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBfX3Njb3BlVG9hc3QsXG4gICAgICBob3RrZXkgPSBWSUVXUE9SVF9ERUZBVUxUX0hPVEtFWSxcbiAgICAgIGxhYmVsID0gXCJOb3RpZmljYXRpb25zICh7aG90a2V5fSlcIixcbiAgICAgIC4uLnZpZXdwb3J0UHJvcHNcbiAgICB9ID0gcHJvcHM7XG4gICAgY29uc3QgY29udGV4dCA9IHVzZVRvYXN0UHJvdmlkZXJDb250ZXh0KFZJRVdQT1JUX05BTUUsIF9fc2NvcGVUb2FzdCk7XG4gICAgY29uc3QgZ2V0SXRlbXMgPSB1c2VDb2xsZWN0aW9uKF9fc2NvcGVUb2FzdCk7XG4gICAgY29uc3Qgd3JhcHBlclJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICBjb25zdCBoZWFkRm9jdXNQcm94eVJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICBjb25zdCB0YWlsRm9jdXNQcm94eVJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICBjb25zdCByZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgY29uc3QgY29tcG9zZWRSZWZzID0gdXNlQ29tcG9zZWRSZWZzKGZvcndhcmRlZFJlZiwgcmVmLCBjb250ZXh0Lm9uVmlld3BvcnRDaGFuZ2UpO1xuICAgIGNvbnN0IGhvdGtleUxhYmVsID0gaG90a2V5LmpvaW4oXCIrXCIpLnJlcGxhY2UoL0tleS9nLCBcIlwiKS5yZXBsYWNlKC9EaWdpdC9nLCBcIlwiKTtcbiAgICBjb25zdCBoYXNUb2FzdHMgPSBjb250ZXh0LnRvYXN0Q291bnQgPiAwO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBoYW5kbGVLZXlEb3duID0gKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGlzSG90a2V5UHJlc3NlZCA9IGhvdGtleS5sZW5ndGggIT09IDAgJiYgaG90a2V5LmV2ZXJ5KChrZXkpID0+IGV2ZW50W2tleV0gfHwgZXZlbnQuY29kZSA9PT0ga2V5KTtcbiAgICAgICAgaWYgKGlzSG90a2V5UHJlc3NlZCkgcmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gICAgICB9O1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93bik7XG4gICAgICByZXR1cm4gKCkgPT4gZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93bik7XG4gICAgfSwgW2hvdGtleV0pO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCB3cmFwcGVyID0gd3JhcHBlclJlZi5jdXJyZW50O1xuICAgICAgY29uc3Qgdmlld3BvcnQgPSByZWYuY3VycmVudDtcbiAgICAgIGlmIChoYXNUb2FzdHMgJiYgd3JhcHBlciAmJiB2aWV3cG9ydCkge1xuICAgICAgICBjb25zdCBoYW5kbGVQYXVzZSA9ICgpID0+IHtcbiAgICAgICAgICBpZiAoIWNvbnRleHQuaXNDbG9zZVBhdXNlZFJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICBjb25zdCBwYXVzZUV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KFZJRVdQT1JUX1BBVVNFKTtcbiAgICAgICAgICAgIHZpZXdwb3J0LmRpc3BhdGNoRXZlbnQocGF1c2VFdmVudCk7XG4gICAgICAgICAgICBjb250ZXh0LmlzQ2xvc2VQYXVzZWRSZWYuY3VycmVudCA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBoYW5kbGVSZXN1bWUgPSAoKSA9PiB7XG4gICAgICAgICAgaWYgKGNvbnRleHQuaXNDbG9zZVBhdXNlZFJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bWVFdmVudCA9IG5ldyBDdXN0b21FdmVudChWSUVXUE9SVF9SRVNVTUUpO1xuICAgICAgICAgICAgdmlld3BvcnQuZGlzcGF0Y2hFdmVudChyZXN1bWVFdmVudCk7XG4gICAgICAgICAgICBjb250ZXh0LmlzQ2xvc2VQYXVzZWRSZWYuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgaGFuZGxlRm9jdXNPdXRSZXN1bWUgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICBjb25zdCBpc0ZvY3VzTW92aW5nT3V0c2lkZSA9ICF3cmFwcGVyLmNvbnRhaW5zKGV2ZW50LnJlbGF0ZWRUYXJnZXQpO1xuICAgICAgICAgIGlmIChpc0ZvY3VzTW92aW5nT3V0c2lkZSkgaGFuZGxlUmVzdW1lKCk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGhhbmRsZVBvaW50ZXJMZWF2ZVJlc3VtZSA9ICgpID0+IHtcbiAgICAgICAgICBjb25zdCBpc0ZvY3VzSW5zaWRlID0gd3JhcHBlci5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KTtcbiAgICAgICAgICBpZiAoIWlzRm9jdXNJbnNpZGUpIGhhbmRsZVJlc3VtZSgpO1xuICAgICAgICB9O1xuICAgICAgICB3cmFwcGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c2luXCIsIGhhbmRsZVBhdXNlKTtcbiAgICAgICAgd3JhcHBlci5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNvdXRcIiwgaGFuZGxlRm9jdXNPdXRSZXN1bWUpO1xuICAgICAgICB3cmFwcGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVybW92ZVwiLCBoYW5kbGVQYXVzZSk7XG4gICAgICAgIHdyYXBwZXIuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJsZWF2ZVwiLCBoYW5kbGVQb2ludGVyTGVhdmVSZXN1bWUpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImJsdXJcIiwgaGFuZGxlUGF1c2UpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsIGhhbmRsZVJlc3VtZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgd3JhcHBlci5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNpblwiLCBoYW5kbGVQYXVzZSk7XG4gICAgICAgICAgd3JhcHBlci5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNvdXRcIiwgaGFuZGxlRm9jdXNPdXRSZXN1bWUpO1xuICAgICAgICAgIHdyYXBwZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJtb3ZlXCIsIGhhbmRsZVBhdXNlKTtcbiAgICAgICAgICB3cmFwcGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb2ludGVybGVhdmVcIiwgaGFuZGxlUG9pbnRlckxlYXZlUmVzdW1lKTtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImJsdXJcIiwgaGFuZGxlUGF1c2UpO1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgaGFuZGxlUmVzdW1lKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9LCBbaGFzVG9hc3RzLCBjb250ZXh0LmlzQ2xvc2VQYXVzZWRSZWZdKTtcbiAgICBjb25zdCBnZXRTb3J0ZWRUYWJiYWJsZUNhbmRpZGF0ZXMgPSBSZWFjdC51c2VDYWxsYmFjayhcbiAgICAgICh7IHRhYmJpbmdEaXJlY3Rpb24gfSkgPT4ge1xuICAgICAgICBjb25zdCB0b2FzdEl0ZW1zID0gZ2V0SXRlbXMoKTtcbiAgICAgICAgY29uc3QgdGFiYmFibGVDYW5kaWRhdGVzID0gdG9hc3RJdGVtcy5tYXAoKHRvYXN0SXRlbSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHRvYXN0Tm9kZSA9IHRvYXN0SXRlbS5yZWYuY3VycmVudDtcbiAgICAgICAgICBjb25zdCB0b2FzdFRhYmJhYmxlQ2FuZGlkYXRlcyA9IFt0b2FzdE5vZGUsIC4uLmdldFRhYmJhYmxlQ2FuZGlkYXRlcyh0b2FzdE5vZGUpXTtcbiAgICAgICAgICByZXR1cm4gdGFiYmluZ0RpcmVjdGlvbiA9PT0gXCJmb3J3YXJkc1wiID8gdG9hc3RUYWJiYWJsZUNhbmRpZGF0ZXMgOiB0b2FzdFRhYmJhYmxlQ2FuZGlkYXRlcy5yZXZlcnNlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKHRhYmJpbmdEaXJlY3Rpb24gPT09IFwiZm9yd2FyZHNcIiA/IHRhYmJhYmxlQ2FuZGlkYXRlcy5yZXZlcnNlKCkgOiB0YWJiYWJsZUNhbmRpZGF0ZXMpLmZsYXQoKTtcbiAgICAgIH0sXG4gICAgICBbZ2V0SXRlbXNdXG4gICAgKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgY29uc3Qgdmlld3BvcnQgPSByZWYuY3VycmVudDtcbiAgICAgIGlmICh2aWV3cG9ydCkge1xuICAgICAgICBjb25zdCBoYW5kbGVLZXlEb3duID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgY29uc3QgaXNNZXRhS2V5ID0gZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTtcbiAgICAgICAgICBjb25zdCBpc1RhYktleSA9IGV2ZW50LmtleSA9PT0gXCJUYWJcIiAmJiAhaXNNZXRhS2V5O1xuICAgICAgICAgIGlmIChpc1RhYktleSkge1xuICAgICAgICAgICAgY29uc3QgZm9jdXNlZEVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgICAgICAgICAgY29uc3QgaXNUYWJiaW5nQmFja3dhcmRzID0gZXZlbnQuc2hpZnRLZXk7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXRJc1ZpZXdwb3J0ID0gZXZlbnQudGFyZ2V0ID09PSB2aWV3cG9ydDtcbiAgICAgICAgICAgIGlmICh0YXJnZXRJc1ZpZXdwb3J0ICYmIGlzVGFiYmluZ0JhY2t3YXJkcykge1xuICAgICAgICAgICAgICBoZWFkRm9jdXNQcm94eVJlZi5jdXJyZW50Py5mb2N1cygpO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0YWJiaW5nRGlyZWN0aW9uID0gaXNUYWJiaW5nQmFja3dhcmRzID8gXCJiYWNrd2FyZHNcIiA6IFwiZm9yd2FyZHNcIjtcbiAgICAgICAgICAgIGNvbnN0IHNvcnRlZENhbmRpZGF0ZXMgPSBnZXRTb3J0ZWRUYWJiYWJsZUNhbmRpZGF0ZXMoeyB0YWJiaW5nRGlyZWN0aW9uIH0pO1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBzb3J0ZWRDYW5kaWRhdGVzLmZpbmRJbmRleCgoY2FuZGlkYXRlKSA9PiBjYW5kaWRhdGUgPT09IGZvY3VzZWRFbGVtZW50KTtcbiAgICAgICAgICAgIGlmIChmb2N1c0ZpcnN0KHNvcnRlZENhbmRpZGF0ZXMuc2xpY2UoaW5kZXggKyAxKSkpIHtcbiAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlzVGFiYmluZ0JhY2t3YXJkcyA/IGhlYWRGb2N1c1Byb3h5UmVmLmN1cnJlbnQ/LmZvY3VzKCkgOiB0YWlsRm9jdXNQcm94eVJlZi5jdXJyZW50Py5mb2N1cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdmlld3BvcnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93bik7XG4gICAgICAgIHJldHVybiAoKSA9PiB2aWV3cG9ydC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBoYW5kbGVLZXlEb3duKTtcbiAgICAgIH1cbiAgICB9LCBbZ2V0SXRlbXMsIGdldFNvcnRlZFRhYmJhYmxlQ2FuZGlkYXRlc10pO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cyhcbiAgICAgIERpc21pc3NhYmxlTGF5ZXIuQnJhbmNoLFxuICAgICAge1xuICAgICAgICByZWY6IHdyYXBwZXJSZWYsXG4gICAgICAgIHJvbGU6IFwicmVnaW9uXCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbFwiOiBsYWJlbC5yZXBsYWNlKFwie2hvdGtleX1cIiwgaG90a2V5TGFiZWwpLFxuICAgICAgICB0YWJJbmRleDogLTEsXG4gICAgICAgIHN0eWxlOiB7IHBvaW50ZXJFdmVudHM6IGhhc1RvYXN0cyA/IHZvaWQgMCA6IFwibm9uZVwiIH0sXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgaGFzVG9hc3RzICYmIC8qIEBfX1BVUkVfXyAqLyBqc3goXG4gICAgICAgICAgICBGb2N1c1Byb3h5LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICByZWY6IGhlYWRGb2N1c1Byb3h5UmVmLFxuICAgICAgICAgICAgICBvbkZvY3VzRnJvbU91dHNpZGVWaWV3cG9ydDogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhYmJhYmxlQ2FuZGlkYXRlcyA9IGdldFNvcnRlZFRhYmJhYmxlQ2FuZGlkYXRlcyh7XG4gICAgICAgICAgICAgICAgICB0YWJiaW5nRGlyZWN0aW9uOiBcImZvcndhcmRzXCJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBmb2N1c0ZpcnN0KHRhYmJhYmxlQ2FuZGlkYXRlcyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICApLFxuICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29sbGVjdGlvbi5TbG90LCB7IHNjb3BlOiBfX3Njb3BlVG9hc3QsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KFByaW1pdGl2ZS5vbCwgeyB0YWJJbmRleDogLTEsIC4uLnZpZXdwb3J0UHJvcHMsIHJlZjogY29tcG9zZWRSZWZzIH0pIH0pLFxuICAgICAgICAgIGhhc1RvYXN0cyAmJiAvKiBAX19QVVJFX18gKi8ganN4KFxuICAgICAgICAgICAgRm9jdXNQcm94eSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgcmVmOiB0YWlsRm9jdXNQcm94eVJlZixcbiAgICAgICAgICAgICAgb25Gb2N1c0Zyb21PdXRzaWRlVmlld3BvcnQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0YWJiYWJsZUNhbmRpZGF0ZXMgPSBnZXRTb3J0ZWRUYWJiYWJsZUNhbmRpZGF0ZXMoe1xuICAgICAgICAgICAgICAgICAgdGFiYmluZ0RpcmVjdGlvbjogXCJiYWNrd2FyZHNcIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGZvY3VzRmlyc3QodGFiYmFibGVDYW5kaWRhdGVzKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIClcbiAgICAgICAgXVxuICAgICAgfVxuICAgICk7XG4gIH1cbik7XG5Ub2FzdFZpZXdwb3J0LmRpc3BsYXlOYW1lID0gVklFV1BPUlRfTkFNRTtcbnZhciBGT0NVU19QUk9YWV9OQU1FID0gXCJUb2FzdEZvY3VzUHJveHlcIjtcbnZhciBGb2N1c1Byb3h5ID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IF9fc2NvcGVUb2FzdCwgb25Gb2N1c0Zyb21PdXRzaWRlVmlld3BvcnQsIC4uLnByb3h5UHJvcHMgfSA9IHByb3BzO1xuICAgIGNvbnN0IGNvbnRleHQgPSB1c2VUb2FzdFByb3ZpZGVyQ29udGV4dChGT0NVU19QUk9YWV9OQU1FLCBfX3Njb3BlVG9hc3QpO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFxuICAgICAgVmlzdWFsbHlIaWRkZW4sXG4gICAgICB7XG4gICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdHJ1ZSxcbiAgICAgICAgdGFiSW5kZXg6IDAsXG4gICAgICAgIC4uLnByb3h5UHJvcHMsXG4gICAgICAgIHJlZjogZm9yd2FyZGVkUmVmLFxuICAgICAgICBzdHlsZTogeyBwb3NpdGlvbjogXCJmaXhlZFwiIH0sXG4gICAgICAgIG9uRm9jdXM6IChldmVudCkgPT4ge1xuICAgICAgICAgIGNvbnN0IHByZXZGb2N1c2VkRWxlbWVudCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQ7XG4gICAgICAgICAgY29uc3QgaXNGb2N1c0Zyb21PdXRzaWRlVmlld3BvcnQgPSAhY29udGV4dC52aWV3cG9ydD8uY29udGFpbnMocHJldkZvY3VzZWRFbGVtZW50KTtcbiAgICAgICAgICBpZiAoaXNGb2N1c0Zyb21PdXRzaWRlVmlld3BvcnQpIG9uRm9jdXNGcm9tT3V0c2lkZVZpZXdwb3J0KCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApO1xuICB9XG4pO1xuRm9jdXNQcm94eS5kaXNwbGF5TmFtZSA9IEZPQ1VTX1BST1hZX05BTUU7XG52YXIgVE9BU1RfTkFNRSA9IFwiVG9hc3RcIjtcbnZhciBUT0FTVF9TV0lQRV9TVEFSVCA9IFwidG9hc3Quc3dpcGVTdGFydFwiO1xudmFyIFRPQVNUX1NXSVBFX01PVkUgPSBcInRvYXN0LnN3aXBlTW92ZVwiO1xudmFyIFRPQVNUX1NXSVBFX0NBTkNFTCA9IFwidG9hc3Quc3dpcGVDYW5jZWxcIjtcbnZhciBUT0FTVF9TV0lQRV9FTkQgPSBcInRvYXN0LnN3aXBlRW5kXCI7XG52YXIgVG9hc3QgPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IHsgZm9yY2VNb3VudCwgb3Blbjogb3BlblByb3AsIGRlZmF1bHRPcGVuLCBvbk9wZW5DaGFuZ2UsIC4uLnRvYXN0UHJvcHMgfSA9IHByb3BzO1xuICAgIGNvbnN0IFtvcGVuLCBzZXRPcGVuXSA9IHVzZUNvbnRyb2xsYWJsZVN0YXRlKHtcbiAgICAgIHByb3A6IG9wZW5Qcm9wLFxuICAgICAgZGVmYXVsdFByb3A6IGRlZmF1bHRPcGVuID8/IHRydWUsXG4gICAgICBvbkNoYW5nZTogb25PcGVuQ2hhbmdlLFxuICAgICAgY2FsbGVyOiBUT0FTVF9OQU1FXG4gICAgfSk7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goUHJlc2VuY2UsIHsgcHJlc2VudDogZm9yY2VNb3VudCB8fCBvcGVuLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChcbiAgICAgIFRvYXN0SW1wbCxcbiAgICAgIHtcbiAgICAgICAgb3BlbixcbiAgICAgICAgLi4udG9hc3RQcm9wcyxcbiAgICAgICAgcmVmOiBmb3J3YXJkZWRSZWYsXG4gICAgICAgIG9uQ2xvc2U6ICgpID0+IHNldE9wZW4oZmFsc2UpLFxuICAgICAgICBvblBhdXNlOiB1c2VDYWxsYmFja1JlZihwcm9wcy5vblBhdXNlKSxcbiAgICAgICAgb25SZXN1bWU6IHVzZUNhbGxiYWNrUmVmKHByb3BzLm9uUmVzdW1lKSxcbiAgICAgICAgb25Td2lwZVN0YXJ0OiBjb21wb3NlRXZlbnRIYW5kbGVycyhwcm9wcy5vblN3aXBlU3RhcnQsIChldmVudCkgPT4ge1xuICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2V0QXR0cmlidXRlKFwiZGF0YS1zd2lwZVwiLCBcInN0YXJ0XCIpO1xuICAgICAgICB9KSxcbiAgICAgICAgb25Td2lwZU1vdmU6IGNvbXBvc2VFdmVudEhhbmRsZXJzKHByb3BzLm9uU3dpcGVNb3ZlLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICBjb25zdCB7IHgsIHkgfSA9IGV2ZW50LmRldGFpbC5kZWx0YTtcbiAgICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnNldEF0dHJpYnV0ZShcImRhdGEtc3dpcGVcIiwgXCJtb3ZlXCIpO1xuICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc3R5bGUuc2V0UHJvcGVydHkoXCItLXJhZGl4LXRvYXN0LXN3aXBlLW1vdmUteFwiLCBgJHt4fXB4YCk7XG4gICAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tcmFkaXgtdG9hc3Qtc3dpcGUtbW92ZS15XCIsIGAke3l9cHhgKTtcbiAgICAgICAgfSksXG4gICAgICAgIG9uU3dpcGVDYW5jZWw6IGNvbXBvc2VFdmVudEhhbmRsZXJzKHByb3BzLm9uU3dpcGVDYW5jZWwsIChldmVudCkgPT4ge1xuICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2V0QXR0cmlidXRlKFwiZGF0YS1zd2lwZVwiLCBcImNhbmNlbFwiKTtcbiAgICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KFwiLS1yYWRpeC10b2FzdC1zd2lwZS1tb3ZlLXhcIik7XG4gICAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcIi0tcmFkaXgtdG9hc3Qtc3dpcGUtbW92ZS15XCIpO1xuICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCItLXJhZGl4LXRvYXN0LXN3aXBlLWVuZC14XCIpO1xuICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCItLXJhZGl4LXRvYXN0LXN3aXBlLWVuZC15XCIpO1xuICAgICAgICB9KSxcbiAgICAgICAgb25Td2lwZUVuZDogY29tcG9zZUV2ZW50SGFuZGxlcnMocHJvcHMub25Td2lwZUVuZCwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgY29uc3QgeyB4LCB5IH0gPSBldmVudC5kZXRhaWwuZGVsdGE7XG4gICAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXN3aXBlXCIsIFwiZW5kXCIpO1xuICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCItLXJhZGl4LXRvYXN0LXN3aXBlLW1vdmUteFwiKTtcbiAgICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KFwiLS1yYWRpeC10b2FzdC1zd2lwZS1tb3ZlLXlcIik7XG4gICAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tcmFkaXgtdG9hc3Qtc3dpcGUtZW5kLXhcIiwgYCR7eH1weGApO1xuICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc3R5bGUuc2V0UHJvcGVydHkoXCItLXJhZGl4LXRvYXN0LXN3aXBlLWVuZC15XCIsIGAke3l9cHhgKTtcbiAgICAgICAgICBzZXRPcGVuKGZhbHNlKTtcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICApIH0pO1xuICB9XG4pO1xuVG9hc3QuZGlzcGxheU5hbWUgPSBUT0FTVF9OQU1FO1xudmFyIFtUb2FzdEludGVyYWN0aXZlUHJvdmlkZXIsIHVzZVRvYXN0SW50ZXJhY3RpdmVDb250ZXh0XSA9IGNyZWF0ZVRvYXN0Q29udGV4dChUT0FTVF9OQU1FLCB7XG4gIG9uQ2xvc2UoKSB7XG4gIH1cbn0pO1xudmFyIFRvYXN0SW1wbCA9IFJlYWN0LmZvcndhcmRSZWYoXG4gIChwcm9wcywgZm9yd2FyZGVkUmVmKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgX19zY29wZVRvYXN0LFxuICAgICAgdHlwZSA9IFwiZm9yZWdyb3VuZFwiLFxuICAgICAgZHVyYXRpb246IGR1cmF0aW9uUHJvcCxcbiAgICAgIG9wZW4sXG4gICAgICBvbkNsb3NlLFxuICAgICAgb25Fc2NhcGVLZXlEb3duLFxuICAgICAgb25QYXVzZSxcbiAgICAgIG9uUmVzdW1lLFxuICAgICAgb25Td2lwZVN0YXJ0LFxuICAgICAgb25Td2lwZU1vdmUsXG4gICAgICBvblN3aXBlQ2FuY2VsLFxuICAgICAgb25Td2lwZUVuZCxcbiAgICAgIC4uLnRvYXN0UHJvcHNcbiAgICB9ID0gcHJvcHM7XG4gICAgY29uc3QgY29udGV4dCA9IHVzZVRvYXN0UHJvdmlkZXJDb250ZXh0KFRPQVNUX05BTUUsIF9fc2NvcGVUb2FzdCk7XG4gICAgY29uc3QgW25vZGUsIHNldE5vZGVdID0gUmVhY3QudXNlU3RhdGUobnVsbCk7XG4gICAgY29uc3QgY29tcG9zZWRSZWZzID0gdXNlQ29tcG9zZWRSZWZzKGZvcndhcmRlZFJlZiwgKG5vZGUyKSA9PiBzZXROb2RlKG5vZGUyKSk7XG4gICAgY29uc3QgcG9pbnRlclN0YXJ0UmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IHN3aXBlRGVsdGFSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgY29uc3QgZHVyYXRpb24gPSBkdXJhdGlvblByb3AgfHwgY29udGV4dC5kdXJhdGlvbjtcbiAgICBjb25zdCBjbG9zZVRpbWVyU3RhcnRUaW1lUmVmID0gUmVhY3QudXNlUmVmKDApO1xuICAgIGNvbnN0IGNsb3NlVGltZXJSZW1haW5pbmdUaW1lUmVmID0gUmVhY3QudXNlUmVmKGR1cmF0aW9uKTtcbiAgICBjb25zdCBjbG9zZVRpbWVyUmVmID0gUmVhY3QudXNlUmVmKDApO1xuICAgIGNvbnN0IHsgb25Ub2FzdEFkZCwgb25Ub2FzdFJlbW92ZSB9ID0gY29udGV4dDtcbiAgICBjb25zdCBoYW5kbGVDbG9zZSA9IHVzZUNhbGxiYWNrUmVmKCgpID0+IHtcbiAgICAgIGNvbnN0IGlzRm9jdXNJblRvYXN0ID0gbm9kZT8uY29udGFpbnMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCk7XG4gICAgICBpZiAoaXNGb2N1c0luVG9hc3QpIGNvbnRleHQudmlld3BvcnQ/LmZvY3VzKCk7XG4gICAgICBvbkNsb3NlKCk7XG4gICAgfSk7XG4gICAgY29uc3Qgc3RhcnRUaW1lciA9IFJlYWN0LnVzZUNhbGxiYWNrKFxuICAgICAgKGR1cmF0aW9uMikgPT4ge1xuICAgICAgICBpZiAoIWR1cmF0aW9uMiB8fCBkdXJhdGlvbjIgPT09IEluZmluaXR5KSByZXR1cm47XG4gICAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xvc2VUaW1lclJlZi5jdXJyZW50KTtcbiAgICAgICAgY2xvc2VUaW1lclN0YXJ0VGltZVJlZi5jdXJyZW50ID0gKC8qIEBfX1BVUkVfXyAqLyBuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XG4gICAgICAgIGNsb3NlVGltZXJSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KGhhbmRsZUNsb3NlLCBkdXJhdGlvbjIpO1xuICAgICAgfSxcbiAgICAgIFtoYW5kbGVDbG9zZV1cbiAgICApO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCB2aWV3cG9ydCA9IGNvbnRleHQudmlld3BvcnQ7XG4gICAgICBpZiAodmlld3BvcnQpIHtcbiAgICAgICAgY29uc3QgaGFuZGxlUmVzdW1lID0gKCkgPT4ge1xuICAgICAgICAgIHN0YXJ0VGltZXIoY2xvc2VUaW1lclJlbWFpbmluZ1RpbWVSZWYuY3VycmVudCk7XG4gICAgICAgICAgb25SZXN1bWU/LigpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBoYW5kbGVQYXVzZSA9ICgpID0+IHtcbiAgICAgICAgICBjb25zdCBlbGFwc2VkVGltZSA9ICgvKiBAX19QVVJFX18gKi8gbmV3IERhdGUoKSkuZ2V0VGltZSgpIC0gY2xvc2VUaW1lclN0YXJ0VGltZVJlZi5jdXJyZW50O1xuICAgICAgICAgIGNsb3NlVGltZXJSZW1haW5pbmdUaW1lUmVmLmN1cnJlbnQgPSBjbG9zZVRpbWVyUmVtYWluaW5nVGltZVJlZi5jdXJyZW50IC0gZWxhcHNlZFRpbWU7XG4gICAgICAgICAgd2luZG93LmNsZWFyVGltZW91dChjbG9zZVRpbWVyUmVmLmN1cnJlbnQpO1xuICAgICAgICAgIG9uUGF1c2U/LigpO1xuICAgICAgICB9O1xuICAgICAgICB2aWV3cG9ydC5hZGRFdmVudExpc3RlbmVyKFZJRVdQT1JUX1BBVVNFLCBoYW5kbGVQYXVzZSk7XG4gICAgICAgIHZpZXdwb3J0LmFkZEV2ZW50TGlzdGVuZXIoVklFV1BPUlRfUkVTVU1FLCBoYW5kbGVSZXN1bWUpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgIHZpZXdwb3J0LnJlbW92ZUV2ZW50TGlzdGVuZXIoVklFV1BPUlRfUEFVU0UsIGhhbmRsZVBhdXNlKTtcbiAgICAgICAgICB2aWV3cG9ydC5yZW1vdmVFdmVudExpc3RlbmVyKFZJRVdQT1JUX1JFU1VNRSwgaGFuZGxlUmVzdW1lKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9LCBbY29udGV4dC52aWV3cG9ydCwgZHVyYXRpb24sIG9uUGF1c2UsIG9uUmVzdW1lLCBzdGFydFRpbWVyXSk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGlmIChvcGVuICYmICFjb250ZXh0LmlzQ2xvc2VQYXVzZWRSZWYuY3VycmVudCkgc3RhcnRUaW1lcihkdXJhdGlvbik7XG4gICAgfSwgW29wZW4sIGR1cmF0aW9uLCBjb250ZXh0LmlzQ2xvc2VQYXVzZWRSZWYsIHN0YXJ0VGltZXJdKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgb25Ub2FzdEFkZCgpO1xuICAgICAgcmV0dXJuICgpID0+IG9uVG9hc3RSZW1vdmUoKTtcbiAgICB9LCBbb25Ub2FzdEFkZCwgb25Ub2FzdFJlbW92ZV0pO1xuICAgIGNvbnN0IGFubm91bmNlVGV4dENvbnRlbnQgPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICAgIHJldHVybiBub2RlID8gZ2V0QW5ub3VuY2VUZXh0Q29udGVudChub2RlKSA6IG51bGw7XG4gICAgfSwgW25vZGVdKTtcbiAgICBpZiAoIWNvbnRleHQudmlld3BvcnQpIHJldHVybiBudWxsO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cyhGcmFnbWVudCwgeyBjaGlsZHJlbjogW1xuICAgICAgYW5ub3VuY2VUZXh0Q29udGVudCAmJiAvKiBAX19QVVJFX18gKi8ganN4KFxuICAgICAgICBUb2FzdEFubm91bmNlLFxuICAgICAgICB7XG4gICAgICAgICAgX19zY29wZVRvYXN0LFxuICAgICAgICAgIHJvbGU6IFwic3RhdHVzXCIsXG4gICAgICAgICAgXCJhcmlhLWxpdmVcIjogdHlwZSA9PT0gXCJmb3JlZ3JvdW5kXCIgPyBcImFzc2VydGl2ZVwiIDogXCJwb2xpdGVcIixcbiAgICAgICAgICBcImFyaWEtYXRvbWljXCI6IHRydWUsXG4gICAgICAgICAgY2hpbGRyZW46IGFubm91bmNlVGV4dENvbnRlbnRcbiAgICAgICAgfVxuICAgICAgKSxcbiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goVG9hc3RJbnRlcmFjdGl2ZVByb3ZpZGVyLCB7IHNjb3BlOiBfX3Njb3BlVG9hc3QsIG9uQ2xvc2U6IGhhbmRsZUNsb3NlLCBjaGlsZHJlbjogUmVhY3RET00uY3JlYXRlUG9ydGFsKFxuICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KENvbGxlY3Rpb24uSXRlbVNsb3QsIHsgc2NvcGU6IF9fc2NvcGVUb2FzdCwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goXG4gICAgICAgICAgRGlzbWlzc2FibGVMYXllci5Sb290LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGFzQ2hpbGQ6IHRydWUsXG4gICAgICAgICAgICBvbkVzY2FwZUtleURvd246IGNvbXBvc2VFdmVudEhhbmRsZXJzKG9uRXNjYXBlS2V5RG93biwgKCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoIWNvbnRleHQuaXNGb2N1c2VkVG9hc3RFc2NhcGVLZXlEb3duUmVmLmN1cnJlbnQpIGhhbmRsZUNsb3NlKCk7XG4gICAgICAgICAgICAgIGNvbnRleHQuaXNGb2N1c2VkVG9hc3RFc2NhcGVLZXlEb3duUmVmLmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goXG4gICAgICAgICAgICAgIFByaW1pdGl2ZS5saSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJvbGU6IFwic3RhdHVzXCIsXG4gICAgICAgICAgICAgICAgXCJhcmlhLWxpdmVcIjogXCJvZmZcIixcbiAgICAgICAgICAgICAgICBcImFyaWEtYXRvbWljXCI6IHRydWUsXG4gICAgICAgICAgICAgICAgdGFiSW5kZXg6IDAsXG4gICAgICAgICAgICAgICAgXCJkYXRhLXN0YXRlXCI6IG9wZW4gPyBcIm9wZW5cIiA6IFwiY2xvc2VkXCIsXG4gICAgICAgICAgICAgICAgXCJkYXRhLXN3aXBlLWRpcmVjdGlvblwiOiBjb250ZXh0LnN3aXBlRGlyZWN0aW9uLFxuICAgICAgICAgICAgICAgIC4uLnRvYXN0UHJvcHMsXG4gICAgICAgICAgICAgICAgcmVmOiBjb21wb3NlZFJlZnMsXG4gICAgICAgICAgICAgICAgc3R5bGU6IHsgdXNlclNlbGVjdDogXCJub25lXCIsIHRvdWNoQWN0aW9uOiBcIm5vbmVcIiwgLi4ucHJvcHMuc3R5bGUgfSxcbiAgICAgICAgICAgICAgICBvbktleURvd246IGNvbXBvc2VFdmVudEhhbmRsZXJzKHByb3BzLm9uS2V5RG93biwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAoZXZlbnQua2V5ICE9PSBcIkVzY2FwZVwiKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICBvbkVzY2FwZUtleURvd24/LihldmVudC5uYXRpdmVFdmVudCk7XG4gICAgICAgICAgICAgICAgICBpZiAoIWV2ZW50Lm5hdGl2ZUV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5pc0ZvY3VzZWRUb2FzdEVzY2FwZUtleURvd25SZWYuY3VycmVudCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGhhbmRsZUNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgb25Qb2ludGVyRG93bjogY29tcG9zZUV2ZW50SGFuZGxlcnMocHJvcHMub25Qb2ludGVyRG93biwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAoZXZlbnQuYnV0dG9uICE9PSAwKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICBwb2ludGVyU3RhcnRSZWYuY3VycmVudCA9IHsgeDogZXZlbnQuY2xpZW50WCwgeTogZXZlbnQuY2xpZW50WSB9O1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIG9uUG9pbnRlck1vdmU6IGNvbXBvc2VFdmVudEhhbmRsZXJzKHByb3BzLm9uUG9pbnRlck1vdmUsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgICAgaWYgKCFwb2ludGVyU3RhcnRSZWYuY3VycmVudCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgY29uc3QgeCA9IGV2ZW50LmNsaWVudFggLSBwb2ludGVyU3RhcnRSZWYuY3VycmVudC54O1xuICAgICAgICAgICAgICAgICAgY29uc3QgeSA9IGV2ZW50LmNsaWVudFkgLSBwb2ludGVyU3RhcnRSZWYuY3VycmVudC55O1xuICAgICAgICAgICAgICAgICAgY29uc3QgaGFzU3dpcGVNb3ZlU3RhcnRlZCA9IEJvb2xlYW4oc3dpcGVEZWx0YVJlZi5jdXJyZW50KTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGlzSG9yaXpvbnRhbFN3aXBlID0gW1wibGVmdFwiLCBcInJpZ2h0XCJdLmluY2x1ZGVzKGNvbnRleHQuc3dpcGVEaXJlY3Rpb24pO1xuICAgICAgICAgICAgICAgICAgY29uc3QgY2xhbXAgPSBbXCJsZWZ0XCIsIFwidXBcIl0uaW5jbHVkZXMoY29udGV4dC5zd2lwZURpcmVjdGlvbikgPyBNYXRoLm1pbiA6IE1hdGgubWF4O1xuICAgICAgICAgICAgICAgICAgY29uc3QgY2xhbXBlZFggPSBpc0hvcml6b250YWxTd2lwZSA/IGNsYW1wKDAsIHgpIDogMDtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGNsYW1wZWRZID0gIWlzSG9yaXpvbnRhbFN3aXBlID8gY2xhbXAoMCwgeSkgOiAwO1xuICAgICAgICAgICAgICAgICAgY29uc3QgbW92ZVN0YXJ0QnVmZmVyID0gZXZlbnQucG9pbnRlclR5cGUgPT09IFwidG91Y2hcIiA/IDEwIDogMjtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGRlbHRhID0geyB4OiBjbGFtcGVkWCwgeTogY2xhbXBlZFkgfTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGV2ZW50RGV0YWlsID0geyBvcmlnaW5hbEV2ZW50OiBldmVudCwgZGVsdGEgfTtcbiAgICAgICAgICAgICAgICAgIGlmIChoYXNTd2lwZU1vdmVTdGFydGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHN3aXBlRGVsdGFSZWYuY3VycmVudCA9IGRlbHRhO1xuICAgICAgICAgICAgICAgICAgICBoYW5kbGVBbmREaXNwYXRjaEN1c3RvbUV2ZW50KFRPQVNUX1NXSVBFX01PVkUsIG9uU3dpcGVNb3ZlLCBldmVudERldGFpbCwge1xuICAgICAgICAgICAgICAgICAgICAgIGRpc2NyZXRlOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNEZWx0YUluRGlyZWN0aW9uKGRlbHRhLCBjb250ZXh0LnN3aXBlRGlyZWN0aW9uLCBtb3ZlU3RhcnRCdWZmZXIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHN3aXBlRGVsdGFSZWYuY3VycmVudCA9IGRlbHRhO1xuICAgICAgICAgICAgICAgICAgICBoYW5kbGVBbmREaXNwYXRjaEN1c3RvbUV2ZW50KFRPQVNUX1NXSVBFX1NUQVJULCBvblN3aXBlU3RhcnQsIGV2ZW50RGV0YWlsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgZGlzY3JldGU6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBldmVudC50YXJnZXQuc2V0UG9pbnRlckNhcHR1cmUoZXZlbnQucG9pbnRlcklkKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoTWF0aC5hYnMoeCkgPiBtb3ZlU3RhcnRCdWZmZXIgfHwgTWF0aC5hYnMoeSkgPiBtb3ZlU3RhcnRCdWZmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgcG9pbnRlclN0YXJ0UmVmLmN1cnJlbnQgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIG9uUG9pbnRlclVwOiBjb21wb3NlRXZlbnRIYW5kbGVycyhwcm9wcy5vblBvaW50ZXJVcCwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBkZWx0YSA9IHN3aXBlRGVsdGFSZWYuY3VycmVudDtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXQuaGFzUG9pbnRlckNhcHR1cmUoZXZlbnQucG9pbnRlcklkKSkge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQucmVsZWFzZVBvaW50ZXJDYXB0dXJlKGV2ZW50LnBvaW50ZXJJZCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBzd2lwZURlbHRhUmVmLmN1cnJlbnQgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgcG9pbnRlclN0YXJ0UmVmLmN1cnJlbnQgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgaWYgKGRlbHRhKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvYXN0ID0gZXZlbnQuY3VycmVudFRhcmdldDtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnREZXRhaWwgPSB7IG9yaWdpbmFsRXZlbnQ6IGV2ZW50LCBkZWx0YSB9O1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNEZWx0YUluRGlyZWN0aW9uKGRlbHRhLCBjb250ZXh0LnN3aXBlRGlyZWN0aW9uLCBjb250ZXh0LnN3aXBlVGhyZXNob2xkKSkge1xuICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUFuZERpc3BhdGNoQ3VzdG9tRXZlbnQoVE9BU1RfU1dJUEVfRU5ELCBvblN3aXBlRW5kLCBldmVudERldGFpbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzY3JldGU6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVBbmREaXNwYXRjaEN1c3RvbUV2ZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgVE9BU1RfU1dJUEVfQ0FOQ0VMLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25Td2lwZUNhbmNlbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50RGV0YWlsLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNjcmV0ZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdG9hc3QuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudDIpID0+IGV2ZW50Mi5wcmV2ZW50RGVmYXVsdCgpLCB7XG4gICAgICAgICAgICAgICAgICAgICAgb25jZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApXG4gICAgICAgICAgfVxuICAgICAgICApIH0pLFxuICAgICAgICBjb250ZXh0LnZpZXdwb3J0XG4gICAgICApIH0pXG4gICAgXSB9KTtcbiAgfVxuKTtcbnZhciBUb2FzdEFubm91bmNlID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgX19zY29wZVRvYXN0LCBjaGlsZHJlbiwgLi4uYW5ub3VuY2VQcm9wcyB9ID0gcHJvcHM7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VUb2FzdFByb3ZpZGVyQ29udGV4dChUT0FTVF9OQU1FLCBfX3Njb3BlVG9hc3QpO1xuICBjb25zdCBbcmVuZGVyQW5ub3VuY2VUZXh0LCBzZXRSZW5kZXJBbm5vdW5jZVRleHRdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaXNBbm5vdW5jZWQsIHNldElzQW5ub3VuY2VkXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgdXNlTmV4dEZyYW1lKCgpID0+IHNldFJlbmRlckFubm91bmNlVGV4dCh0cnVlKSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgdGltZXIgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiBzZXRJc0Fubm91bmNlZCh0cnVlKSwgMWUzKTtcbiAgICByZXR1cm4gKCkgPT4gd2luZG93LmNsZWFyVGltZW91dCh0aW1lcik7XG4gIH0sIFtdKTtcbiAgcmV0dXJuIGlzQW5ub3VuY2VkID8gbnVsbCA6IC8qIEBfX1BVUkVfXyAqLyBqc3goUG9ydGFsLCB7IGFzQ2hpbGQ6IHRydWUsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KFZpc3VhbGx5SGlkZGVuLCB7IC4uLmFubm91bmNlUHJvcHMsIGNoaWxkcmVuOiByZW5kZXJBbm5vdW5jZVRleHQgJiYgLyogQF9fUFVSRV9fICovIGpzeHMoRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtcbiAgICBjb250ZXh0LmxhYmVsLFxuICAgIFwiIFwiLFxuICAgIGNoaWxkcmVuXG4gIF0gfSkgfSkgfSk7XG59O1xudmFyIFRJVExFX05BTUUgPSBcIlRvYXN0VGl0bGVcIjtcbnZhciBUb2FzdFRpdGxlID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IF9fc2NvcGVUb2FzdCwgLi4udGl0bGVQcm9wcyB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goUHJpbWl0aXZlLmRpdiwgeyAuLi50aXRsZVByb3BzLCByZWY6IGZvcndhcmRlZFJlZiB9KTtcbiAgfVxuKTtcblRvYXN0VGl0bGUuZGlzcGxheU5hbWUgPSBUSVRMRV9OQU1FO1xudmFyIERFU0NSSVBUSU9OX05BTUUgPSBcIlRvYXN0RGVzY3JpcHRpb25cIjtcbnZhciBUb2FzdERlc2NyaXB0aW9uID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IF9fc2NvcGVUb2FzdCwgLi4uZGVzY3JpcHRpb25Qcm9wcyB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goUHJpbWl0aXZlLmRpdiwgeyAuLi5kZXNjcmlwdGlvblByb3BzLCByZWY6IGZvcndhcmRlZFJlZiB9KTtcbiAgfVxuKTtcblRvYXN0RGVzY3JpcHRpb24uZGlzcGxheU5hbWUgPSBERVNDUklQVElPTl9OQU1FO1xudmFyIEFDVElPTl9OQU1FID0gXCJUb2FzdEFjdGlvblwiO1xudmFyIFRvYXN0QWN0aW9uID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IGFsdFRleHQsIC4uLmFjdGlvblByb3BzIH0gPSBwcm9wcztcbiAgICBpZiAoIWFsdFRleHQudHJpbSgpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBgSW52YWxpZCBwcm9wIFxcYGFsdFRleHRcXGAgc3VwcGxpZWQgdG8gXFxgJHtBQ1RJT05fTkFNRX1cXGAuIEV4cGVjdGVkIG5vbi1lbXB0eSBcXGBzdHJpbmdcXGAuYFxuICAgICAgKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChUb2FzdEFubm91bmNlRXhjbHVkZSwgeyBhbHRUZXh0LCBhc0NoaWxkOiB0cnVlLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChUb2FzdENsb3NlLCB7IC4uLmFjdGlvblByb3BzLCByZWY6IGZvcndhcmRlZFJlZiB9KSB9KTtcbiAgfVxuKTtcblRvYXN0QWN0aW9uLmRpc3BsYXlOYW1lID0gQUNUSU9OX05BTUU7XG52YXIgQ0xPU0VfTkFNRSA9IFwiVG9hc3RDbG9zZVwiO1xudmFyIFRvYXN0Q2xvc2UgPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IHsgX19zY29wZVRvYXN0LCAuLi5jbG9zZVByb3BzIH0gPSBwcm9wcztcbiAgICBjb25zdCBpbnRlcmFjdGl2ZUNvbnRleHQgPSB1c2VUb2FzdEludGVyYWN0aXZlQ29udGV4dChDTE9TRV9OQU1FLCBfX3Njb3BlVG9hc3QpO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFRvYXN0QW5ub3VuY2VFeGNsdWRlLCB7IGFzQ2hpbGQ6IHRydWUsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KFxuICAgICAgUHJpbWl0aXZlLmJ1dHRvbixcbiAgICAgIHtcbiAgICAgICAgdHlwZTogXCJidXR0b25cIixcbiAgICAgICAgLi4uY2xvc2VQcm9wcyxcbiAgICAgICAgcmVmOiBmb3J3YXJkZWRSZWYsXG4gICAgICAgIG9uQ2xpY2s6IGNvbXBvc2VFdmVudEhhbmRsZXJzKHByb3BzLm9uQ2xpY2ssIGludGVyYWN0aXZlQ29udGV4dC5vbkNsb3NlKVxuICAgICAgfVxuICAgICkgfSk7XG4gIH1cbik7XG5Ub2FzdENsb3NlLmRpc3BsYXlOYW1lID0gQ0xPU0VfTkFNRTtcbnZhciBUb2FzdEFubm91bmNlRXhjbHVkZSA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgeyBfX3Njb3BlVG9hc3QsIGFsdFRleHQsIC4uLmFubm91bmNlRXhjbHVkZVByb3BzIH0gPSBwcm9wcztcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goXG4gICAgUHJpbWl0aXZlLmRpdixcbiAgICB7XG4gICAgICBcImRhdGEtcmFkaXgtdG9hc3QtYW5ub3VuY2UtZXhjbHVkZVwiOiBcIlwiLFxuICAgICAgXCJkYXRhLXJhZGl4LXRvYXN0LWFubm91bmNlLWFsdFwiOiBhbHRUZXh0IHx8IHZvaWQgMCxcbiAgICAgIC4uLmFubm91bmNlRXhjbHVkZVByb3BzLFxuICAgICAgcmVmOiBmb3J3YXJkZWRSZWZcbiAgICB9XG4gICk7XG59KTtcbmZ1bmN0aW9uIGdldEFubm91bmNlVGV4dENvbnRlbnQoY29udGFpbmVyKSB7XG4gIGNvbnN0IHRleHRDb250ZW50ID0gW107XG4gIGNvbnN0IGNoaWxkTm9kZXMgPSBBcnJheS5mcm9tKGNvbnRhaW5lci5jaGlsZE5vZGVzKTtcbiAgY2hpbGROb2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XG4gICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IG5vZGUuVEVYVF9OT0RFICYmIG5vZGUudGV4dENvbnRlbnQpIHRleHRDb250ZW50LnB1c2gobm9kZS50ZXh0Q29udGVudCk7XG4gICAgaWYgKGlzSFRNTEVsZW1lbnQobm9kZSkpIHtcbiAgICAgIGNvbnN0IGlzSGlkZGVuID0gbm9kZS5hcmlhSGlkZGVuIHx8IG5vZGUuaGlkZGVuIHx8IG5vZGUuc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCI7XG4gICAgICBjb25zdCBpc0V4Y2x1ZGVkID0gbm9kZS5kYXRhc2V0LnJhZGl4VG9hc3RBbm5vdW5jZUV4Y2x1ZGUgPT09IFwiXCI7XG4gICAgICBpZiAoIWlzSGlkZGVuKSB7XG4gICAgICAgIGlmIChpc0V4Y2x1ZGVkKSB7XG4gICAgICAgICAgY29uc3QgYWx0VGV4dCA9IG5vZGUuZGF0YXNldC5yYWRpeFRvYXN0QW5ub3VuY2VBbHQ7XG4gICAgICAgICAgaWYgKGFsdFRleHQpIHRleHRDb250ZW50LnB1c2goYWx0VGV4dCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGV4dENvbnRlbnQucHVzaCguLi5nZXRBbm5vdW5jZVRleHRDb250ZW50KG5vZGUpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiB0ZXh0Q29udGVudDtcbn1cbmZ1bmN0aW9uIGhhbmRsZUFuZERpc3BhdGNoQ3VzdG9tRXZlbnQobmFtZSwgaGFuZGxlciwgZGV0YWlsLCB7IGRpc2NyZXRlIH0pIHtcbiAgY29uc3QgY3VycmVudFRhcmdldCA9IGRldGFpbC5vcmlnaW5hbEV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KG5hbWUsIHsgYnViYmxlczogdHJ1ZSwgY2FuY2VsYWJsZTogdHJ1ZSwgZGV0YWlsIH0pO1xuICBpZiAoaGFuZGxlcikgY3VycmVudFRhcmdldC5hZGRFdmVudExpc3RlbmVyKG5hbWUsIGhhbmRsZXIsIHsgb25jZTogdHJ1ZSB9KTtcbiAgaWYgKGRpc2NyZXRlKSB7XG4gICAgZGlzcGF0Y2hEaXNjcmV0ZUN1c3RvbUV2ZW50KGN1cnJlbnRUYXJnZXQsIGV2ZW50KTtcbiAgfSBlbHNlIHtcbiAgICBjdXJyZW50VGFyZ2V0LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICB9XG59XG52YXIgaXNEZWx0YUluRGlyZWN0aW9uID0gKGRlbHRhLCBkaXJlY3Rpb24sIHRocmVzaG9sZCA9IDApID0+IHtcbiAgY29uc3QgZGVsdGFYID0gTWF0aC5hYnMoZGVsdGEueCk7XG4gIGNvbnN0IGRlbHRhWSA9IE1hdGguYWJzKGRlbHRhLnkpO1xuICBjb25zdCBpc0RlbHRhWCA9IGRlbHRhWCA+IGRlbHRhWTtcbiAgaWYgKGRpcmVjdGlvbiA9PT0gXCJsZWZ0XCIgfHwgZGlyZWN0aW9uID09PSBcInJpZ2h0XCIpIHtcbiAgICByZXR1cm4gaXNEZWx0YVggJiYgZGVsdGFYID4gdGhyZXNob2xkO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAhaXNEZWx0YVggJiYgZGVsdGFZID4gdGhyZXNob2xkO1xuICB9XG59O1xuZnVuY3Rpb24gdXNlTmV4dEZyYW1lKGNhbGxiYWNrID0gKCkgPT4ge1xufSkge1xuICBjb25zdCBmbiA9IHVzZUNhbGxiYWNrUmVmKGNhbGxiYWNrKTtcbiAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICBsZXQgcmFmMSA9IDA7XG4gICAgbGV0IHJhZjIgPSAwO1xuICAgIHJhZjEgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHJhZjIgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZuKSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZShyYWYxKTtcbiAgICAgIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZShyYWYyKTtcbiAgICB9O1xuICB9LCBbZm5dKTtcbn1cbmZ1bmN0aW9uIGlzSFRNTEVsZW1lbnQobm9kZSkge1xuICByZXR1cm4gbm9kZS5ub2RlVHlwZSA9PT0gbm9kZS5FTEVNRU5UX05PREU7XG59XG5mdW5jdGlvbiBnZXRUYWJiYWJsZUNhbmRpZGF0ZXMoY29udGFpbmVyKSB7XG4gIGNvbnN0IG5vZGVzID0gW107XG4gIGNvbnN0IHdhbGtlciA9IGRvY3VtZW50LmNyZWF0ZVRyZWVXYWxrZXIoY29udGFpbmVyLCBOb2RlRmlsdGVyLlNIT1dfRUxFTUVOVCwge1xuICAgIGFjY2VwdE5vZGU6IChub2RlKSA9PiB7XG4gICAgICBjb25zdCBpc0hpZGRlbklucHV0ID0gbm9kZS50YWdOYW1lID09PSBcIklOUFVUXCIgJiYgbm9kZS50eXBlID09PSBcImhpZGRlblwiO1xuICAgICAgaWYgKG5vZGUuZGlzYWJsZWQgfHwgbm9kZS5oaWRkZW4gfHwgaXNIaWRkZW5JbnB1dCkgcmV0dXJuIE5vZGVGaWx0ZXIuRklMVEVSX1NLSVA7XG4gICAgICByZXR1cm4gbm9kZS50YWJJbmRleCA+PSAwID8gTm9kZUZpbHRlci5GSUxURVJfQUNDRVBUIDogTm9kZUZpbHRlci5GSUxURVJfU0tJUDtcbiAgICB9XG4gIH0pO1xuICB3aGlsZSAod2Fsa2VyLm5leHROb2RlKCkpIG5vZGVzLnB1c2god2Fsa2VyLmN1cnJlbnROb2RlKTtcbiAgcmV0dXJuIG5vZGVzO1xufVxuZnVuY3Rpb24gZm9jdXNGaXJzdChjYW5kaWRhdGVzKSB7XG4gIGNvbnN0IHByZXZpb3VzbHlGb2N1c2VkRWxlbWVudCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG4gIHJldHVybiBjYW5kaWRhdGVzLnNvbWUoKGNhbmRpZGF0ZSkgPT4ge1xuICAgIGlmIChjYW5kaWRhdGUgPT09IHByZXZpb3VzbHlGb2N1c2VkRWxlbWVudCkgcmV0dXJuIHRydWU7XG4gICAgY2FuZGlkYXRlLmZvY3VzKCk7XG4gICAgcmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IHByZXZpb3VzbHlGb2N1c2VkRWxlbWVudDtcbiAgfSk7XG59XG52YXIgUHJvdmlkZXIgPSBUb2FzdFByb3ZpZGVyO1xudmFyIFZpZXdwb3J0ID0gVG9hc3RWaWV3cG9ydDtcbnZhciBSb290MiA9IFRvYXN0O1xudmFyIFRpdGxlID0gVG9hc3RUaXRsZTtcbnZhciBEZXNjcmlwdGlvbiA9IFRvYXN0RGVzY3JpcHRpb247XG52YXIgQWN0aW9uID0gVG9hc3RBY3Rpb247XG52YXIgQ2xvc2UgPSBUb2FzdENsb3NlO1xuZXhwb3J0IHtcbiAgQWN0aW9uLFxuICBDbG9zZSxcbiAgRGVzY3JpcHRpb24sXG4gIFByb3ZpZGVyLFxuICBSb290MiBhcyBSb290LFxuICBUaXRsZSxcbiAgVG9hc3QsXG4gIFRvYXN0QWN0aW9uLFxuICBUb2FzdENsb3NlLFxuICBUb2FzdERlc2NyaXB0aW9uLFxuICBUb2FzdFByb3ZpZGVyLFxuICBUb2FzdFRpdGxlLFxuICBUb2FzdFZpZXdwb3J0LFxuICBWaWV3cG9ydCxcbiAgY3JlYXRlVG9hc3RTY29wZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlJlYWN0RE9NIiwiY29tcG9zZUV2ZW50SGFuZGxlcnMiLCJ1c2VDb21wb3NlZFJlZnMiLCJjcmVhdGVDb2xsZWN0aW9uIiwiY3JlYXRlQ29udGV4dFNjb3BlIiwiRGlzbWlzc2FibGVMYXllciIsIlBvcnRhbCIsIlByZXNlbmNlIiwiUHJpbWl0aXZlIiwiZGlzcGF0Y2hEaXNjcmV0ZUN1c3RvbUV2ZW50IiwidXNlQ2FsbGJhY2tSZWYiLCJ1c2VDb250cm9sbGFibGVTdGF0ZSIsInVzZUxheW91dEVmZmVjdCIsIlZpc3VhbGx5SGlkZGVuIiwiRnJhZ21lbnQiLCJqc3giLCJqc3hzIiwiUFJPVklERVJfTkFNRSIsIkNvbGxlY3Rpb24iLCJ1c2VDb2xsZWN0aW9uIiwiY3JlYXRlQ29sbGVjdGlvblNjb3BlIiwiY3JlYXRlVG9hc3RDb250ZXh0IiwiY3JlYXRlVG9hc3RTY29wZSIsIlRvYXN0UHJvdmlkZXJQcm92aWRlciIsInVzZVRvYXN0UHJvdmlkZXJDb250ZXh0IiwiVG9hc3RQcm92aWRlciIsInByb3BzIiwiX19zY29wZVRvYXN0IiwibGFiZWwiLCJkdXJhdGlvbiIsInN3aXBlRGlyZWN0aW9uIiwic3dpcGVUaHJlc2hvbGQiLCJjaGlsZHJlbiIsInZpZXdwb3J0Iiwic2V0Vmlld3BvcnQiLCJ1c2VTdGF0ZSIsInRvYXN0Q291bnQiLCJzZXRUb2FzdENvdW50IiwiaXNGb2N1c2VkVG9hc3RFc2NhcGVLZXlEb3duUmVmIiwidXNlUmVmIiwiaXNDbG9zZVBhdXNlZFJlZiIsInRyaW0iLCJjb25zb2xlIiwiZXJyb3IiLCJQcm92aWRlciIsInNjb3BlIiwib25WaWV3cG9ydENoYW5nZSIsIm9uVG9hc3RBZGQiLCJ1c2VDYWxsYmFjayIsInByZXZDb3VudCIsIm9uVG9hc3RSZW1vdmUiLCJkaXNwbGF5TmFtZSIsIlZJRVdQT1JUX05BTUUiLCJWSUVXUE9SVF9ERUZBVUxUX0hPVEtFWSIsIlZJRVdQT1JUX1BBVVNFIiwiVklFV1BPUlRfUkVTVU1FIiwiVG9hc3RWaWV3cG9ydCIsImZvcndhcmRSZWYiLCJmb3J3YXJkZWRSZWYiLCJob3RrZXkiLCJ2aWV3cG9ydFByb3BzIiwiY29udGV4dCIsImdldEl0ZW1zIiwid3JhcHBlclJlZiIsImhlYWRGb2N1c1Byb3h5UmVmIiwidGFpbEZvY3VzUHJveHlSZWYiLCJyZWYiLCJjb21wb3NlZFJlZnMiLCJob3RrZXlMYWJlbCIsImpvaW4iLCJyZXBsYWNlIiwiaGFzVG9hc3RzIiwidXNlRWZmZWN0IiwiaGFuZGxlS2V5RG93biIsImV2ZW50IiwiaXNIb3RrZXlQcmVzc2VkIiwibGVuZ3RoIiwiZXZlcnkiLCJrZXkiLCJjb2RlIiwiY3VycmVudCIsImZvY3VzIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIndyYXBwZXIiLCJoYW5kbGVQYXVzZSIsInBhdXNlRXZlbnQiLCJDdXN0b21FdmVudCIsImRpc3BhdGNoRXZlbnQiLCJoYW5kbGVSZXN1bWUiLCJyZXN1bWVFdmVudCIsImhhbmRsZUZvY3VzT3V0UmVzdW1lIiwiaXNGb2N1c01vdmluZ091dHNpZGUiLCJjb250YWlucyIsInJlbGF0ZWRUYXJnZXQiLCJoYW5kbGVQb2ludGVyTGVhdmVSZXN1bWUiLCJpc0ZvY3VzSW5zaWRlIiwiYWN0aXZlRWxlbWVudCIsIndpbmRvdyIsImdldFNvcnRlZFRhYmJhYmxlQ2FuZGlkYXRlcyIsInRhYmJpbmdEaXJlY3Rpb24iLCJ0b2FzdEl0ZW1zIiwidGFiYmFibGVDYW5kaWRhdGVzIiwibWFwIiwidG9hc3RJdGVtIiwidG9hc3ROb2RlIiwidG9hc3RUYWJiYWJsZUNhbmRpZGF0ZXMiLCJnZXRUYWJiYWJsZUNhbmRpZGF0ZXMiLCJyZXZlcnNlIiwiZmxhdCIsImlzTWV0YUtleSIsImFsdEtleSIsImN0cmxLZXkiLCJtZXRhS2V5IiwiaXNUYWJLZXkiLCJmb2N1c2VkRWxlbWVudCIsImlzVGFiYmluZ0JhY2t3YXJkcyIsInNoaWZ0S2V5IiwidGFyZ2V0SXNWaWV3cG9ydCIsInRhcmdldCIsInNvcnRlZENhbmRpZGF0ZXMiLCJpbmRleCIsImZpbmRJbmRleCIsImNhbmRpZGF0ZSIsImZvY3VzRmlyc3QiLCJzbGljZSIsInByZXZlbnREZWZhdWx0IiwiQnJhbmNoIiwicm9sZSIsInRhYkluZGV4Iiwic3R5bGUiLCJwb2ludGVyRXZlbnRzIiwiRm9jdXNQcm94eSIsIm9uRm9jdXNGcm9tT3V0c2lkZVZpZXdwb3J0IiwiU2xvdCIsIm9sIiwiRk9DVVNfUFJPWFlfTkFNRSIsInByb3h5UHJvcHMiLCJwb3NpdGlvbiIsIm9uRm9jdXMiLCJwcmV2Rm9jdXNlZEVsZW1lbnQiLCJpc0ZvY3VzRnJvbU91dHNpZGVWaWV3cG9ydCIsIlRPQVNUX05BTUUiLCJUT0FTVF9TV0lQRV9TVEFSVCIsIlRPQVNUX1NXSVBFX01PVkUiLCJUT0FTVF9TV0lQRV9DQU5DRUwiLCJUT0FTVF9TV0lQRV9FTkQiLCJUb2FzdCIsImZvcmNlTW91bnQiLCJvcGVuIiwib3BlblByb3AiLCJkZWZhdWx0T3BlbiIsIm9uT3BlbkNoYW5nZSIsInRvYXN0UHJvcHMiLCJzZXRPcGVuIiwicHJvcCIsImRlZmF1bHRQcm9wIiwib25DaGFuZ2UiLCJjYWxsZXIiLCJwcmVzZW50IiwiVG9hc3RJbXBsIiwib25DbG9zZSIsIm9uUGF1c2UiLCJvblJlc3VtZSIsIm9uU3dpcGVTdGFydCIsImN1cnJlbnRUYXJnZXQiLCJzZXRBdHRyaWJ1dGUiLCJvblN3aXBlTW92ZSIsIngiLCJ5IiwiZGV0YWlsIiwiZGVsdGEiLCJzZXRQcm9wZXJ0eSIsIm9uU3dpcGVDYW5jZWwiLCJyZW1vdmVQcm9wZXJ0eSIsIm9uU3dpcGVFbmQiLCJUb2FzdEludGVyYWN0aXZlUHJvdmlkZXIiLCJ1c2VUb2FzdEludGVyYWN0aXZlQ29udGV4dCIsInR5cGUiLCJkdXJhdGlvblByb3AiLCJvbkVzY2FwZUtleURvd24iLCJub2RlIiwic2V0Tm9kZSIsIm5vZGUyIiwicG9pbnRlclN0YXJ0UmVmIiwic3dpcGVEZWx0YVJlZiIsImNsb3NlVGltZXJTdGFydFRpbWVSZWYiLCJjbG9zZVRpbWVyUmVtYWluaW5nVGltZVJlZiIsImNsb3NlVGltZXJSZWYiLCJoYW5kbGVDbG9zZSIsImlzRm9jdXNJblRvYXN0Iiwic3RhcnRUaW1lciIsImR1cmF0aW9uMiIsIkluZmluaXR5IiwiY2xlYXJUaW1lb3V0IiwiRGF0ZSIsImdldFRpbWUiLCJzZXRUaW1lb3V0IiwiZWxhcHNlZFRpbWUiLCJhbm5vdW5jZVRleHRDb250ZW50IiwidXNlTWVtbyIsImdldEFubm91bmNlVGV4dENvbnRlbnQiLCJUb2FzdEFubm91bmNlIiwiY3JlYXRlUG9ydGFsIiwiSXRlbVNsb3QiLCJSb290IiwiYXNDaGlsZCIsImxpIiwidXNlclNlbGVjdCIsInRvdWNoQWN0aW9uIiwib25LZXlEb3duIiwibmF0aXZlRXZlbnQiLCJkZWZhdWx0UHJldmVudGVkIiwib25Qb2ludGVyRG93biIsImJ1dHRvbiIsImNsaWVudFgiLCJjbGllbnRZIiwib25Qb2ludGVyTW92ZSIsImhhc1N3aXBlTW92ZVN0YXJ0ZWQiLCJCb29sZWFuIiwiaXNIb3Jpem9udGFsU3dpcGUiLCJpbmNsdWRlcyIsImNsYW1wIiwiTWF0aCIsIm1pbiIsIm1heCIsImNsYW1wZWRYIiwiY2xhbXBlZFkiLCJtb3ZlU3RhcnRCdWZmZXIiLCJwb2ludGVyVHlwZSIsImV2ZW50RGV0YWlsIiwib3JpZ2luYWxFdmVudCIsImhhbmRsZUFuZERpc3BhdGNoQ3VzdG9tRXZlbnQiLCJkaXNjcmV0ZSIsImlzRGVsdGFJbkRpcmVjdGlvbiIsInNldFBvaW50ZXJDYXB0dXJlIiwicG9pbnRlcklkIiwiYWJzIiwib25Qb2ludGVyVXAiLCJoYXNQb2ludGVyQ2FwdHVyZSIsInJlbGVhc2VQb2ludGVyQ2FwdHVyZSIsInRvYXN0IiwiZXZlbnQyIiwib25jZSIsImFubm91bmNlUHJvcHMiLCJyZW5kZXJBbm5vdW5jZVRleHQiLCJzZXRSZW5kZXJBbm5vdW5jZVRleHQiLCJpc0Fubm91bmNlZCIsInNldElzQW5ub3VuY2VkIiwidXNlTmV4dEZyYW1lIiwidGltZXIiLCJUSVRMRV9OQU1FIiwiVG9hc3RUaXRsZSIsInRpdGxlUHJvcHMiLCJkaXYiLCJERVNDUklQVElPTl9OQU1FIiwiVG9hc3REZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uUHJvcHMiLCJBQ1RJT05fTkFNRSIsIlRvYXN0QWN0aW9uIiwiYWx0VGV4dCIsImFjdGlvblByb3BzIiwiVG9hc3RBbm5vdW5jZUV4Y2x1ZGUiLCJUb2FzdENsb3NlIiwiQ0xPU0VfTkFNRSIsImNsb3NlUHJvcHMiLCJpbnRlcmFjdGl2ZUNvbnRleHQiLCJvbkNsaWNrIiwiYW5ub3VuY2VFeGNsdWRlUHJvcHMiLCJjb250YWluZXIiLCJ0ZXh0Q29udGVudCIsImNoaWxkTm9kZXMiLCJBcnJheSIsImZyb20iLCJmb3JFYWNoIiwibm9kZVR5cGUiLCJURVhUX05PREUiLCJwdXNoIiwiaXNIVE1MRWxlbWVudCIsImlzSGlkZGVuIiwiYXJpYUhpZGRlbiIsImhpZGRlbiIsImRpc3BsYXkiLCJpc0V4Y2x1ZGVkIiwiZGF0YXNldCIsInJhZGl4VG9hc3RBbm5vdW5jZUV4Y2x1ZGUiLCJyYWRpeFRvYXN0QW5ub3VuY2VBbHQiLCJuYW1lIiwiaGFuZGxlciIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwiZGlyZWN0aW9uIiwidGhyZXNob2xkIiwiZGVsdGFYIiwiZGVsdGFZIiwiaXNEZWx0YVgiLCJjYWxsYmFjayIsImZuIiwicmFmMSIsInJhZjIiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsIkVMRU1FTlRfTk9ERSIsIm5vZGVzIiwid2Fsa2VyIiwiY3JlYXRlVHJlZVdhbGtlciIsIk5vZGVGaWx0ZXIiLCJTSE9XX0VMRU1FTlQiLCJhY2NlcHROb2RlIiwiaXNIaWRkZW5JbnB1dCIsInRhZ05hbWUiLCJkaXNhYmxlZCIsIkZJTFRFUl9TS0lQIiwiRklMVEVSX0FDQ0VQVCIsIm5leHROb2RlIiwiY3VycmVudE5vZGUiLCJjYW5kaWRhdGVzIiwicHJldmlvdXNseUZvY3VzZWRFbGVtZW50Iiwic29tZSIsIlZpZXdwb3J0IiwiUm9vdDIiLCJUaXRsZSIsIkRlc2NyaXB0aW9uIiwiQWN0aW9uIiwiQ2xvc2UiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@radix-ui+react-toast@1.2.14_@types+react-dom@19.1.6_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@radix-ui/react-toast/dist/index.mjs\n");

/***/ })

};
;